{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6f0f\u6d1ewiki \u7b80\u4ecb \u672cwiki\u63d0\u4f9b\u4e86\u667a\u80fd\u5408\u7ea6\u6f0f\u6d1e\u7684\u7b80\u8981\u4fe1\u606f\uff0c\u5305\u62ec\u51fa\u73b0\u65b9\u5f0f\uff0c\u5229\u7528\u5b9e\u4f8b\u4ee5\u53ca\u63a8\u8350\u89e3\u51b3\u7684\u65b9\u5f0f\u3002","title":"\u6f0f\u6d1ewiki"},{"location":"#wiki","text":"","title":"\u6f0f\u6d1ewiki"},{"location":"#_1","text":"\u672cwiki\u63d0\u4f9b\u4e86\u667a\u80fd\u5408\u7ea6\u6f0f\u6d1e\u7684\u7b80\u8981\u4fe1\u606f\uff0c\u5305\u62ec\u51fa\u73b0\u65b9\u5f0f\uff0c\u5229\u7528\u5b9e\u4f8b\u4ee5\u53ca\u63a8\u8350\u89e3\u51b3\u7684\u65b9\u5f0f\u3002","title":"\u7b80\u4ecb"},{"location":"Array%20Length%20Assignment/","text":"Array Length Assignment \u57fa\u672c\u60c5\u51b5 \u68c0\u67e5\u5668\uff1acontrolled-array-length \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u4e2d \u63cf\u8ff0 \u68c0\u67e5\u6bcf\u4e2a\u6570\u7ec4\u957f\u5ea6\u7684\u5206\u914d \u5229\u7528\u6848\u4f8b contract A { uint[] testArray; // dynamic size array function f(uint usersCount) public { // ... testArray.length = usersCount; // ... } function g(uint userIndex, uint val) public { // ... testArray[userIndex] = val; // ... } } \u5408\u7ea6\u7684\u5b58\u50a8/\u72b6\u6001\u53d8\u91cf\u90fd\u662f\u7528\u4e00\u4e2a256\u6bd4\u7279\u7684\u6574\u6570\u4e3a\u7d22\u5f15\u7684\uff0c\u7528\u6237\u53ef\u4ee5\u5c06\u6570\u7ec4\u7684\u957f\u5ea6\u8bbe\u7f6e\u4e3a2^256-1\u53bb\u7ed9\u6240\u6709\u7684\u5b58\u50a8\u7a7a\u95f4\u7f16\u53f7\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u4e00\u4e2a\u7528\u6237\u53ef\u4ee5\u8c03\u7528f\u51fd\u6570\u53bb\u8bbe\u7f6e\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u7136\u540e\u8c03\u7528g\u51fd\u6570\u53bb\u63a7\u5236\u5b58\u50a8\u7a7a\u95f4\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6b64\u5904\u7684\u5b58\u50a8\u69fd\u662f\u901a\u8fc7\u7d22\u5f15\u5668\u7684\u6563\u5217\u8fdb\u884c\u7d22\u5f15\u7684\uff1b\u5c3d\u7ba1\u5982\u6b64\uff0c\u6240\u6709\u5b58\u50a8\u4ecd\u7136\u53ef\u4ee5\u8bbf\u95ee\u5e76\u4e14\u53ef\u4ee5\u7531\u653b\u51fb\u8005\u63a7\u5236\u3002 \u63a8\u8350\u65b9\u5f0f \u4e0d\u5141\u8bb8\u76f4\u63a5\u8bbe\u7f6e\u6570\u7ec4\u957f\u5ea6\uff1b\u76f8\u53cd\uff0c\u9009\u62e9\u6839\u636e\u9700\u8981\u589e\u52a0\u6570\u503c\u3002\u5426\u5219\uff0c\u5f7b\u5e95\u5ba1\u67e5\u5408\u540c\uff0c\u4ee5\u786e\u4fdd\u7528\u6237\u63a7\u5236\u7684\u53d8\u91cf\u4e0d\u80fd\u8fbe\u5230\u6570\u7ec4\u957f\u5ea6\u7684\u5206\u914d\u3002","title":"Array Length Assignment"},{"location":"Array%20Length%20Assignment/#array-length-assignment","text":"","title":"Array Length Assignment"},{"location":"Array%20Length%20Assignment/#_1","text":"\u68c0\u67e5\u5668\uff1acontrolled-array-length \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u4e2d","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Array%20Length%20Assignment/#_2","text":"\u68c0\u67e5\u6bcf\u4e2a\u6570\u7ec4\u957f\u5ea6\u7684\u5206\u914d","title":"\u63cf\u8ff0"},{"location":"Array%20Length%20Assignment/#_3","text":"contract A { uint[] testArray; // dynamic size array function f(uint usersCount) public { // ... testArray.length = usersCount; // ... } function g(uint userIndex, uint val) public { // ... testArray[userIndex] = val; // ... } } \u5408\u7ea6\u7684\u5b58\u50a8/\u72b6\u6001\u53d8\u91cf\u90fd\u662f\u7528\u4e00\u4e2a256\u6bd4\u7279\u7684\u6574\u6570\u4e3a\u7d22\u5f15\u7684\uff0c\u7528\u6237\u53ef\u4ee5\u5c06\u6570\u7ec4\u7684\u957f\u5ea6\u8bbe\u7f6e\u4e3a2^256-1\u53bb\u7ed9\u6240\u6709\u7684\u5b58\u50a8\u7a7a\u95f4\u7f16\u53f7\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u4e00\u4e2a\u7528\u6237\u53ef\u4ee5\u8c03\u7528f\u51fd\u6570\u53bb\u8bbe\u7f6e\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u7136\u540e\u8c03\u7528g\u51fd\u6570\u53bb\u63a7\u5236\u5b58\u50a8\u7a7a\u95f4\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6b64\u5904\u7684\u5b58\u50a8\u69fd\u662f\u901a\u8fc7\u7d22\u5f15\u5668\u7684\u6563\u5217\u8fdb\u884c\u7d22\u5f15\u7684\uff1b\u5c3d\u7ba1\u5982\u6b64\uff0c\u6240\u6709\u5b58\u50a8\u4ecd\u7136\u53ef\u4ee5\u8bbf\u95ee\u5e76\u4e14\u53ef\u4ee5\u7531\u653b\u51fb\u8005\u63a7\u5236\u3002","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Array%20Length%20Assignment/#_4","text":"\u4e0d\u5141\u8bb8\u76f4\u63a5\u8bbe\u7f6e\u6570\u7ec4\u957f\u5ea6\uff1b\u76f8\u53cd\uff0c\u9009\u62e9\u6839\u636e\u9700\u8981\u589e\u52a0\u6570\u503c\u3002\u5426\u5219\uff0c\u5f7b\u5e95\u5ba1\u67e5\u5408\u540c\uff0c\u4ee5\u786e\u4fdd\u7528\u6237\u63a7\u5236\u7684\u53d8\u91cf\u4e0d\u80fd\u8fbe\u5230\u6570\u7ec4\u957f\u5ea6\u7684\u5206\u914d\u3002","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Assembly%20usage/","text":"Assembly usage \u57fa\u672c\u60c5\u51b5 Check: assembly Severity: Informational Confidence: High \u63cf\u8ff0 The use of assembly is error-prone and should be avoided. \u63a8\u8350\u65b9\u5f0f Do not use evm assembly.","title":"Assembly usage"},{"location":"Assembly%20usage/#assembly-usage","text":"","title":"Assembly usage"},{"location":"Assembly%20usage/#_1","text":"Check: assembly Severity: Informational Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Assembly%20usage/#_2","text":"The use of assembly is error-prone and should be avoided.","title":"\u63cf\u8ff0"},{"location":"Assembly%20usage/#_3","text":"Do not use evm assembly.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Assert%20state%20shange/","text":"Assert state shange \u57fa\u672c\u60c5\u51b5 Check: assert-state-change Severity: Informational Confidence: High \u63cf\u8ff0 Incorrect use of assert(). See Solidity best practices. \u5229\u7528\u6848\u4f8b contract A { uint s_a; function bad() public { assert((s_a += 1) > 10); } } The assert in bad() increments the state variable s_a while checking for the condition. \u63a8\u8350\u65b9\u5f0f Use require for invariants modifying the state.","title":"Assert state shange"},{"location":"Assert%20state%20shange/#assert-state-shange","text":"","title":"Assert state shange"},{"location":"Assert%20state%20shange/#_1","text":"Check: assert-state-change Severity: Informational Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Assert%20state%20shange/#_2","text":"Incorrect use of assert(). See Solidity best practices.","title":"\u63cf\u8ff0"},{"location":"Assert%20state%20shange/#_3","text":"contract A { uint s_a; function bad() public { assert((s_a += 1) > 10); } } The assert in bad() increments the state variable s_a while checking for the condition.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Assert%20state%20shange/#_4","text":"Use require for invariants modifying the state.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Block%20timestamp/","text":"Block timestamp \u57fa\u672c\u60c5\u51b5 Check: timestamp Severity: Low Confidence: Medium \u63cf\u8ff0 Dangerous usage of block.timestamp. block.timestamp can be manipulated by miners. \u5229\u7528\u6848\u4f8b \"Bob's contract relies on block.timestamp for its randomness. Eve is a miner and manipulates block.timestamp to exploit Bob's contract. \u63a8\u8350\u65b9\u5f0f Avoid relying on block.timestamp.","title":"Block timestamp"},{"location":"Block%20timestamp/#block-timestamp","text":"","title":"Block timestamp"},{"location":"Block%20timestamp/#_1","text":"Check: timestamp Severity: Low Confidence: Medium","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Block%20timestamp/#_2","text":"Dangerous usage of block.timestamp. block.timestamp can be manipulated by miners.","title":"\u63cf\u8ff0"},{"location":"Block%20timestamp/#_3","text":"\"Bob's contract relies on block.timestamp for its randomness. Eve is a miner and manipulates block.timestamp to exploit Bob's contract.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Block%20timestamp/#_4","text":"Avoid relying on block.timestamp.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Boolean%20equality/","text":"Boolean equality \u57fa\u672c\u60c5\u51b5 Check: boolean-equal Severity: Informational Confidence: High \u63cf\u8ff0 Detects the comparison to boolean constants. \u5229\u7528\u6848\u4f8b contract A { function f(bool x) public { // ... if (x == true) { // bad! // ... } // ... } } Boolean constants can be used directly and do not need to be compare to true or false. \u63a8\u8350\u65b9\u5f0f Remove the equality to the boolean constant.","title":"Boolean equality"},{"location":"Boolean%20equality/#boolean-equality","text":"","title":"Boolean equality"},{"location":"Boolean%20equality/#_1","text":"Check: boolean-equal Severity: Informational Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Boolean%20equality/#_2","text":"Detects the comparison to boolean constants.","title":"\u63cf\u8ff0"},{"location":"Boolean%20equality/#_3","text":"contract A { function f(bool x) public { // ... if (x == true) { // bad! // ... } // ... } } Boolean constants can be used directly and do not need to be compare to true or false.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Boolean%20equality/#_4","text":"Remove the equality to the boolean constant.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Builtin%20Symbol%20Shadowing/","text":"Builtin Symbol Shadowing \u57fa\u672c\u60c5\u51b5 Check: shadowing-builtin Severity: Low Confidence: High \u63cf\u8ff0 Detection of shadowing built-in symbols using local variables, state variables, functions, modifiers, or events. \u5229\u7528\u6848\u4f8b pragma solidity ^0.4.24; contract Bug { uint now; // Overshadows current time stamp. function assert(bool condition) public { // Overshadows built-in symbol for providing assertions. } function get_next_expiration(uint earlier_time) private returns (uint) { return now + 259200; // References overshadowed timestamp. } } now is defined as a state variable, and shadows with the built-in symbol now. The function assert overshadows the built-in assert function. Any use of either of these built-in symbols may lead to unexpected results. \u63a8\u8350\u65b9\u5f0f Rename the local variables, state variables, functions, modifiers, and events that shadow a builtin symbol.","title":"Builtin Symbol Shadowing"},{"location":"Builtin%20Symbol%20Shadowing/#builtin-symbol-shadowing","text":"","title":"Builtin Symbol Shadowing"},{"location":"Builtin%20Symbol%20Shadowing/#_1","text":"Check: shadowing-builtin Severity: Low Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Builtin%20Symbol%20Shadowing/#_2","text":"Detection of shadowing built-in symbols using local variables, state variables, functions, modifiers, or events.","title":"\u63cf\u8ff0"},{"location":"Builtin%20Symbol%20Shadowing/#_3","text":"pragma solidity ^0.4.24; contract Bug { uint now; // Overshadows current time stamp. function assert(bool condition) public { // Overshadows built-in symbol for providing assertions. } function get_next_expiration(uint earlier_time) private returns (uint) { return now + 259200; // References overshadowed timestamp. } } now is defined as a state variable, and shadows with the built-in symbol now. The function assert overshadows the built-in assert function. Any use of either of these built-in symbols may lead to unexpected results.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Builtin%20Symbol%20Shadowing/#_4","text":"Rename the local variables, state variables, functions, modifiers, and events that shadow a builtin symbol.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Calls%20inside%20a%20loop/","text":"Calls inside a loop \u57fa\u672c\u60c5\u51b5 Check: calls-loop Severity: Low Confidence: Medium \u63cf\u8ff0 Calls inside a loop might lead to a denial-of-service attack. \u5229\u7528\u6848\u4f8b contract CallsInLoop{ address[] destinations; constructor(address[] newDestinations) public{ destinations = newDestinations; } function bad() external{ for (uint i=0; i < destinations.length; i++){ destinations[i].transfer(i); } } } If one of the destinations has a fallback function that reverts, bad will always revert. \u63a8\u8350\u65b9\u5f0f Favor pull over push strategy for external calls.","title":"Calls inside a loop"},{"location":"Calls%20inside%20a%20loop/#calls-inside-a-loop","text":"","title":"Calls inside a loop"},{"location":"Calls%20inside%20a%20loop/#_1","text":"Check: calls-loop Severity: Low Confidence: Medium","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Calls%20inside%20a%20loop/#_2","text":"Calls inside a loop might lead to a denial-of-service attack.","title":"\u63cf\u8ff0"},{"location":"Calls%20inside%20a%20loop/#_3","text":"contract CallsInLoop{ address[] destinations; constructor(address[] newDestinations) public{ destinations = newDestinations; } function bad() external{ for (uint i=0; i < destinations.length; i++){ destinations[i].transfer(i); } } } If one of the destinations has a fallback function that reverts, bad will always revert.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Calls%20inside%20a%20loop/#_4","text":"Favor pull over push strategy for external calls.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Conformance%20to%20Solidity%20naming%20conventions/","text":"Conformance to Solidity naming conventions \u57fa\u672c\u60c5\u51b5 Check: naming-convention Severity: Informational Confidence: High \u63cf\u8ff0 Solidity defines a naming convention that should be followed. Rule exceptions + Allow constant variable name/symbol/decimals to be lowercase (ERC20). + Allow _ at the beginning of the mixed_case match for private variables and unused parameters. \u63a8\u8350\u65b9\u5f0f Follow the Solidity naming convention.","title":"Conformance to Solidity naming conventions"},{"location":"Conformance%20to%20Solidity%20naming%20conventions/#conformance-to-solidity-naming-conventions","text":"","title":"Conformance to Solidity naming conventions"},{"location":"Conformance%20to%20Solidity%20naming%20conventions/#_1","text":"Check: naming-convention Severity: Informational Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Conformance%20to%20Solidity%20naming%20conventions/#_2","text":"Solidity defines a naming convention that should be followed. Rule exceptions + Allow constant variable name/symbol/decimals to be lowercase (ERC20). + Allow _ at the beginning of the mixed_case match for private variables and unused parameters.","title":"\u63cf\u8ff0"},{"location":"Conformance%20to%20Solidity%20naming%20conventions/#_3","text":"Follow the Solidity naming convention.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Constant%20functions%20changing%20the%20state/","text":"Constant functions changing the state \u57fa\u672c\u60c5\u51b5 Check: constant-function-state Severity: Medium Confidence: Medium \u63cf\u8ff0 Functions declared as constant/pure/view change the state. constant/pure/view was not enforced prior to Solidity 0.5. Starting from Solidity 0.5, a call to a constant/pure/view function uses the STATICCALL opcode, which reverts in case of state modification. As a result, a call to an incorrectly labeled function may trap a contract compiled with Solidity 0.5. \u5229\u7528\u6848\u4f8b contract Constant{ uint counter; function get() public view returns(uint){ counter = counter +1; return counter } } Constant was deployed with Solidity 0.4.25. Bob writes a smart contract that interacts with Constant in Solidity 0.5.0. All the calls to get revert, breaking Bob's smart contract execution. \u63a8\u8350\u65b9\u5f0f Ensure that attributes of contracts compiled prior to Solidity 0.5.0 are correct.","title":"Constant functions changing the state"},{"location":"Constant%20functions%20changing%20the%20state/#constant-functions-changing-the-state","text":"","title":"Constant functions changing the state"},{"location":"Constant%20functions%20changing%20the%20state/#_1","text":"Check: constant-function-state Severity: Medium Confidence: Medium","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Constant%20functions%20changing%20the%20state/#_2","text":"Functions declared as constant/pure/view change the state. constant/pure/view was not enforced prior to Solidity 0.5. Starting from Solidity 0.5, a call to a constant/pure/view function uses the STATICCALL opcode, which reverts in case of state modification. As a result, a call to an incorrectly labeled function may trap a contract compiled with Solidity 0.5.","title":"\u63cf\u8ff0"},{"location":"Constant%20functions%20changing%20the%20state/#_3","text":"contract Constant{ uint counter; function get() public view returns(uint){ counter = counter +1; return counter } } Constant was deployed with Solidity 0.4.25. Bob writes a smart contract that interacts with Constant in Solidity 0.5.0. All the calls to get revert, breaking Bob's smart contract execution.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Constant%20functions%20changing%20the%20state/#_4","text":"Ensure that attributes of contracts compiled prior to Solidity 0.5.0 are correct.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Constant%20functions%20using%20assembly%20code/","text":"Constant functions using assembly code \u57fa\u672c\u60c5\u51b5 Check: constant-function-asm Severity: Medium Confidence: Medium \u63cf\u8ff0 Functions declared as constant/pure/view using assembly code. constant/pure/view was not enforced prior to Solidity 0.5. Starting from Solidity 0.5, a call to a constant/pure/view function uses the STATICCALL opcode, which reverts in case of state modification. As a result, a call to an incorrectly labeled function may trap a contract compiled with Solidity 0.5. \u5229\u7528\u6848\u4f8b contract Constant{ uint counter; function get() public view returns(uint){ counter = counter +1; return counter } } Constant was deployed with Solidity 0.4.25. Bob writes a smart contract that interacts with Constant in Solidity 0.5.0. All the calls to get revert, breaking Bob's smart contract execution. \u63a8\u8350\u65b9\u5f0f Ensure the attributes of contracts compiled prior to Solidity 0.5.0 are correct.","title":"Constant functions using assembly code"},{"location":"Constant%20functions%20using%20assembly%20code/#constant-functions-using-assembly-code","text":"","title":"Constant functions using assembly code"},{"location":"Constant%20functions%20using%20assembly%20code/#_1","text":"Check: constant-function-asm Severity: Medium Confidence: Medium","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Constant%20functions%20using%20assembly%20code/#_2","text":"Functions declared as constant/pure/view using assembly code. constant/pure/view was not enforced prior to Solidity 0.5. Starting from Solidity 0.5, a call to a constant/pure/view function uses the STATICCALL opcode, which reverts in case of state modification. As a result, a call to an incorrectly labeled function may trap a contract compiled with Solidity 0.5.","title":"\u63cf\u8ff0"},{"location":"Constant%20functions%20using%20assembly%20code/#_3","text":"contract Constant{ uint counter; function get() public view returns(uint){ counter = counter +1; return counter } } Constant was deployed with Solidity 0.4.25. Bob writes a smart contract that interacts with Constant in Solidity 0.5.0. All the calls to get revert, breaking Bob's smart contract execution.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Constant%20functions%20using%20assembly%20code/#_4","text":"Ensure the attributes of contracts compiled prior to Solidity 0.5.0 are correct.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Contracts%20that%20lock%20Ether/","text":"Contracts that lock Ether \u57fa\u672c\u60c5\u51b5 Check: locked-ether Severity: Medium Confidence: High \u63cf\u8ff0 Contract with a payable function, but without a withdrawal capacity. \u5229\u7528\u6848\u4f8b pragma solidity 0.4.24; contract Locked{ function receive() payable public{ } } Every Ether sent to Locked will be lost. \u63a8\u8350\u65b9\u5f0f Remove the payable attribute or add a withdraw function.","title":"Contracts that lock Ether"},{"location":"Contracts%20that%20lock%20Ether/#contracts-that-lock-ether","text":"","title":"Contracts that lock Ether"},{"location":"Contracts%20that%20lock%20Ether/#_1","text":"Check: locked-ether Severity: Medium Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Contracts%20that%20lock%20Ether/#_2","text":"Contract with a payable function, but without a withdrawal capacity.","title":"\u63cf\u8ff0"},{"location":"Contracts%20that%20lock%20Ether/#_3","text":"pragma solidity 0.4.24; contract Locked{ function receive() payable public{ } } Every Ether sent to Locked will be lost.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Contracts%20that%20lock%20Ether/#_4","text":"Remove the payable attribute or add a withdraw function.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Controlled%20Delegatecall/","text":"Controlled Delegatecall \u57fa\u672c\u60c5\u51b5 \u68c0\u67e5\u5668\uff1acontrolled-delegatecall \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u4e2d \u63cf\u8ff0 \u68c0\u67e5\u53d7\u7528\u6237\u63a7\u5236\u7684\u5bf9\u67d0\u4e2a\u5730\u5740\u7684Delegatecall\u6216callgate\u8c03\u7528 \u5229\u7528\u6848\u4f8b contract Delegatecall{ function delegate(address to, bytes data){ to.delegatecall(data); } } bob\u8c03\u7528delegate\uff0c\u5c06\u6267\u884c\u4efb\u52a1\u59d4\u6258\u7ed9\u4ed6\u7684\u6076\u610f\u5408\u540c\u3002\u7ed3\u679c\uff0c\u9c8d\u52c3\u63d0\u53d6\u4e86\u5408\u540c\u7684\u8d44\u91d1\u5e76\u7834\u574f\u4e86\u5b83\u3002 \u63a8\u8350\u65b9\u5f0f \u907f\u514d\u4f7f\u7528delegatecall\uff0c\u53ea\u4f7f\u7528\u53ef\u4fe1\u7684\u5730\u5740","title":"Controlled Delegatecall"},{"location":"Controlled%20Delegatecall/#controlled-delegatecall","text":"","title":"Controlled Delegatecall"},{"location":"Controlled%20Delegatecall/#_1","text":"\u68c0\u67e5\u5668\uff1acontrolled-delegatecall \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u4e2d","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Controlled%20Delegatecall/#_2","text":"\u68c0\u67e5\u53d7\u7528\u6237\u63a7\u5236\u7684\u5bf9\u67d0\u4e2a\u5730\u5740\u7684Delegatecall\u6216callgate\u8c03\u7528","title":"\u63cf\u8ff0"},{"location":"Controlled%20Delegatecall/#_3","text":"contract Delegatecall{ function delegate(address to, bytes data){ to.delegatecall(data); } } bob\u8c03\u7528delegate\uff0c\u5c06\u6267\u884c\u4efb\u52a1\u59d4\u6258\u7ed9\u4ed6\u7684\u6076\u610f\u5408\u540c\u3002\u7ed3\u679c\uff0c\u9c8d\u52c3\u63d0\u53d6\u4e86\u5408\u540c\u7684\u8d44\u91d1\u5e76\u7834\u574f\u4e86\u5b83\u3002","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Controlled%20Delegatecall/#_4","text":"\u907f\u514d\u4f7f\u7528delegatecall\uff0c\u53ea\u4f7f\u7528\u53ef\u4fe1\u7684\u5730\u5740","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Costly%20operations%20inside%20a%20loop/","text":"Costly operations inside a loop \u57fa\u672c\u60c5\u51b5 Check: costly-loop Severity: Informational Confidence: High \u63cf\u8ff0 Costly operations inside a loop might waste gas, so optimizations are justified. \u5229\u7528\u6848\u4f8b contract CostlyOperationsInLoop{ uint loop_count = 100; uint state_variable=0; function bad() external{ for (uint i=0; i < loop_count; i++){ state_variable++; } } function good() external{ uint local_variable = state_variable; for (uint i=0; i < loop_count; i++){ local_variable++; } state_variable = local_variable; } } Incrementing state_variable in a loop incurs a lot of gas because of expensive SSTOREs, which might lead to an out-of-gas. \u63a8\u8350\u65b9\u5f0f Use a local variable to hold the loop computation result.","title":"Costly operations inside a loop"},{"location":"Costly%20operations%20inside%20a%20loop/#costly-operations-inside-a-loop","text":"","title":"Costly operations inside a loop"},{"location":"Costly%20operations%20inside%20a%20loop/#_1","text":"Check: costly-loop Severity: Informational Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Costly%20operations%20inside%20a%20loop/#_2","text":"Costly operations inside a loop might waste gas, so optimizations are justified.","title":"\u63cf\u8ff0"},{"location":"Costly%20operations%20inside%20a%20loop/#_3","text":"contract CostlyOperationsInLoop{ uint loop_count = 100; uint state_variable=0; function bad() external{ for (uint i=0; i < loop_count; i++){ state_variable++; } } function good() external{ uint local_variable = state_variable; for (uint i=0; i < loop_count; i++){ local_variable++; } state_variable = local_variable; } } Incrementing state_variable in a loop incurs a lot of gas because of expensive SSTOREs, which might lead to an out-of-gas.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Costly%20operations%20inside%20a%20loop/#_4","text":"Use a local variable to hold the loop computation result.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Dangerous%20enum%20conversion/","text":"Dangerous enum conversion \u57fa\u672c\u60c5\u51b5 Check: enum-conversion Severity: Medium Confidence: High \u63cf\u8ff0 Detect out-of-range enum conversion (solc < 0.4.5). \u5229\u7528\u6848\u4f8b pragma solidity 0.4.2; contract Test{ enum E{a} function bug(uint a) public returns(E){ return E(a); } } Attackers can trigger unexpected behaviour by calling bug(1). \u63a8\u8350\u65b9\u5f0f Use a recent compiler version. If solc <0.4.5 is required, check the enum conversion range.","title":"Dangerous enum conversion"},{"location":"Dangerous%20enum%20conversion/#dangerous-enum-conversion","text":"","title":"Dangerous enum conversion"},{"location":"Dangerous%20enum%20conversion/#_1","text":"Check: enum-conversion Severity: Medium Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Dangerous%20enum%20conversion/#_2","text":"Detect out-of-range enum conversion (solc < 0.4.5).","title":"\u63cf\u8ff0"},{"location":"Dangerous%20enum%20conversion/#_3","text":"pragma solidity 0.4.2; contract Test{ enum E{a} function bug(uint a) public returns(E){ return E(a); } } Attackers can trigger unexpected behaviour by calling bug(1).","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Dangerous%20enum%20conversion/#_4","text":"Use a recent compiler version. If solc <0.4.5 is required, check the enum conversion range.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Dangerous%20strict%20equalities/","text":"Dangerous strict equalities \u57fa\u672c\u60c5\u51b5 Check: incorrect-equality Severity: Medium Confidence: High \u63cf\u8ff0 Use of strict equalities that can be easily manipulated by an attacker. \u5229\u7528\u6848\u4f8b contract Crowdsale{ function fund_reached() public returns(bool){ return this.balance == 100 ether; } Crowdsale relies on fund_reached to know when to stop the sale of tokens. Crowdsale reaches 100 Ether. Bob sends 0.1 Ether. As a result, fund_reached is always false and the crowdsale never ends. \u63a8\u8350\u65b9\u5f0f Don't use strict equality to determine if an account has enough Ether or tokens.","title":"Dangerous strict equalities"},{"location":"Dangerous%20strict%20equalities/#dangerous-strict-equalities","text":"","title":"Dangerous strict equalities"},{"location":"Dangerous%20strict%20equalities/#_1","text":"Check: incorrect-equality Severity: Medium Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Dangerous%20strict%20equalities/#_2","text":"Use of strict equalities that can be easily manipulated by an attacker.","title":"\u63cf\u8ff0"},{"location":"Dangerous%20strict%20equalities/#_3","text":"contract Crowdsale{ function fund_reached() public returns(bool){ return this.balance == 100 ether; } Crowdsale relies on fund_reached to know when to stop the sale of tokens. Crowdsale reaches 100 Ether. Bob sends 0.1 Ether. As a result, fund_reached is always false and the crowdsale never ends.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Dangerous%20strict%20equalities/#_4","text":"Don't use strict equality to determine if an account has enough Ether or tokens.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Dangerous%20unary%20expressions/","text":"Dangerous unary expressions \u57fa\u672c\u60c5\u51b5 Check: incorrect-unary Severity: Low Confidence: Medium \u63cf\u8ff0 Unary expressions such as x=+1 probably typos. \u5229\u7528\u6848\u4f8b contract Bug{ uint public counter; function increase() public returns(uint){ counter=+1; return counter; } } increase() uses =+ instead of +=, so counter will never exceed 1. \u63a8\u8350\u65b9\u5f0f Remove the unary expression.","title":"Dangerous unary expressions"},{"location":"Dangerous%20unary%20expressions/#dangerous-unary-expressions","text":"","title":"Dangerous unary expressions"},{"location":"Dangerous%20unary%20expressions/#_1","text":"Check: incorrect-unary Severity: Low Confidence: Medium","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Dangerous%20unary%20expressions/#_2","text":"Unary expressions such as x=+1 probably typos.","title":"\u63cf\u8ff0"},{"location":"Dangerous%20unary%20expressions/#_3","text":"contract Bug{ uint public counter; function increase() public returns(uint){ counter=+1; return counter; } } increase() uses =+ instead of +=, so counter will never exceed 1.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Dangerous%20unary%20expressions/#_4","text":"Remove the unary expression.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Dangerous%20usage%20of%20tx.origin/","text":"Dangerous usage of tx.origin \u57fa\u672c\u60c5\u51b5 Check: tx-origin Severity: Medium Confidence: Medium \u63cf\u8ff0 Detects if the same base constructor is called with arguments from two different locations in the same inheritance hierarchy. \u5229\u7528\u6848\u4f8b contract TxOrigin { address owner = msg.sender; function bug() { require(tx.origin == owner); } Bob is the owner of TxOrigin. Bob calls Eve's contract. Eve's contract calls TxOrigin and bypasses the tx.origin protection.. \u63a8\u8350\u65b9\u5f0f Do not use tx.origin for authorization.","title":"Dangerous usage of tx.origin"},{"location":"Dangerous%20usage%20of%20tx.origin/#dangerous-usage-of-txorigin","text":"","title":"Dangerous usage of tx.origin"},{"location":"Dangerous%20usage%20of%20tx.origin/#_1","text":"Check: tx-origin Severity: Medium Confidence: Medium","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Dangerous%20usage%20of%20tx.origin/#_2","text":"Detects if the same base constructor is called with arguments from two different locations in the same inheritance hierarchy.","title":"\u63cf\u8ff0"},{"location":"Dangerous%20usage%20of%20tx.origin/#_3","text":"contract TxOrigin { address owner = msg.sender; function bug() { require(tx.origin == owner); } Bob is the owner of TxOrigin. Bob calls Eve's contract. Eve's contract calls TxOrigin and bypasses the tx.origin protection..","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Dangerous%20usage%20of%20tx.origin/#_4","text":"Do not use tx.origin for authorization.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Dead-code/","text":"Dead-code \u57fa\u672c\u60c5\u51b5 Check: dead-code Severity: Informational Confidence: High \u63cf\u8ff0 Functions that are not sued. \u5229\u7528\u6848\u4f8b contract Contract{ function dead_code() internal() {} } dead_code is not used in the contract, and make the code's review more difficult. \u63a8\u8350\u65b9\u5f0f Remove unused functions.","title":"Dead-code"},{"location":"Dead-code/#dead-code","text":"","title":"Dead-code"},{"location":"Dead-code/#_1","text":"Check: dead-code Severity: Informational Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Dead-code/#_2","text":"Functions that are not sued.","title":"\u63cf\u8ff0"},{"location":"Dead-code/#_3","text":"contract Contract{ function dead_code() internal() {} } dead_code is not used in the contract, and make the code's review more difficult.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Dead-code/#_4","text":"Remove unused functions.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Deletion%20on%20mapping%20containing%20a%20structure/","text":"Deletion on mapping containing a structure \u57fa\u672c\u60c5\u51b5 Check: mapping-deletion Severity: Medium Confidence: High \u63cf\u8ff0 A deletion in a structure containing a mapping will not delete the mapping (see the Solidity documentation). The remaining data may be used to compromise the contract. \u5229\u7528\u6848\u4f8b struct BalancesStruct{ address owner; mapping(address => uint) balances; } mapping(address => BalancesStruct) public stackBalance; function remove() internal{ delete stackBalance[msg.sender]; } remove deletes an item of stackBalance. The mapping balances is never deleted, so remove does not work as intended. \u63a8\u8350\u65b9\u5f0f Use a lock mechanism instead of a deletion to disable structure containing a mapping.","title":"Deletion on mapping containing a structure"},{"location":"Deletion%20on%20mapping%20containing%20a%20structure/#deletion-on-mapping-containing-a-structure","text":"","title":"Deletion on mapping containing a structure"},{"location":"Deletion%20on%20mapping%20containing%20a%20structure/#_1","text":"Check: mapping-deletion Severity: Medium Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Deletion%20on%20mapping%20containing%20a%20structure/#_2","text":"A deletion in a structure containing a mapping will not delete the mapping (see the Solidity documentation). The remaining data may be used to compromise the contract.","title":"\u63cf\u8ff0"},{"location":"Deletion%20on%20mapping%20containing%20a%20structure/#_3","text":"struct BalancesStruct{ address owner; mapping(address => uint) balances; } mapping(address => BalancesStruct) public stackBalance; function remove() internal{ delete stackBalance[msg.sender]; } remove deletes an item of stackBalance. The mapping balances is never deleted, so remove does not work as intended.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Deletion%20on%20mapping%20containing%20a%20structure/#_4","text":"Use a lock mechanism instead of a deletion to disable structure containing a mapping.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Deprecated%20standards/","text":"Deprecated standards \u57fa\u672c\u60c5\u51b5 Check: deprecated-standards Severity: Informational Confidence: High \u63cf\u8ff0 Detect the usage of deprecated standards. \u5229\u7528\u6848\u4f8b contract ContractWithDeprecatedReferences { // Deprecated: Change block.blockhash() -> blockhash() bytes32 globalBlockHash = block.blockhash(0); // Deprecated: Change constant -> view function functionWithDeprecatedThrow() public constant { // Deprecated: Change msg.gas -> gasleft() if(msg.gas == msg.value) { // Deprecated: Change throw -> revert() throw; } } // Deprecated: Change constant -> view function functionWithDeprecatedReferences() public constant { // Deprecated: Change sha3() -> keccak256() bytes32 sha3Result = sha3(\"test deprecated sha3 usage\"); // Deprecated: Change callcode() -> delegatecall() address(this).callcode(); // Deprecated: Change suicide() -> selfdestruct() suicide(address(0)); } } \u63a8\u8350\u65b9\u5f0f Replace all uses of deprecated symbols.","title":"Deprecated standards"},{"location":"Deprecated%20standards/#deprecated-standards","text":"","title":"Deprecated standards"},{"location":"Deprecated%20standards/#_1","text":"Check: deprecated-standards Severity: Informational Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Deprecated%20standards/#_2","text":"Detect the usage of deprecated standards.","title":"\u63cf\u8ff0"},{"location":"Deprecated%20standards/#_3","text":"contract ContractWithDeprecatedReferences { // Deprecated: Change block.blockhash() -> blockhash() bytes32 globalBlockHash = block.blockhash(0); // Deprecated: Change constant -> view function functionWithDeprecatedThrow() public constant { // Deprecated: Change msg.gas -> gasleft() if(msg.gas == msg.value) { // Deprecated: Change throw -> revert() throw; } } // Deprecated: Change constant -> view function functionWithDeprecatedReferences() public constant { // Deprecated: Change sha3() -> keccak256() bytes32 sha3Result = sha3(\"test deprecated sha3 usage\"); // Deprecated: Change callcode() -> delegatecall() address(this).callcode(); // Deprecated: Change suicide() -> selfdestruct() suicide(address(0)); } }","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Deprecated%20standards/#_4","text":"Replace all uses of deprecated symbols.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Different%20pragma%20directives%20are%20used/","text":"Different pragma directives are used \u57fa\u672c\u60c5\u51b5 Check: pragma Severity: Informational Confidence: High \u63cf\u8ff0 Detect whether different Solidity versions are used. \u63a8\u8350\u65b9\u5f0f Use one Solidity version.","title":"Different pragma directives are used"},{"location":"Different%20pragma%20directives%20are%20used/#different-pragma-directives-are-used","text":"","title":"Different pragma directives are used"},{"location":"Different%20pragma%20directives%20are%20used/#_1","text":"Check: pragma Severity: Informational Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Different%20pragma%20directives%20are%20used/#_2","text":"Detect whether different Solidity versions are used.","title":"\u63cf\u8ff0"},{"location":"Different%20pragma%20directives%20are%20used/#_3","text":"Use one Solidity version.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Divide%20before%20multiply/","text":"Divide before multiply \u57fa\u672c\u60c5\u51b5 Check: divide-before-multiply Severity: Medium Confidence: Medium \u63cf\u8ff0 Solidity integer division might truncate. As a result, performing multiplication before division can sometimes avoid loss of precision. \u5229\u7528\u6848\u4f8b contract A { function f(uint n) public { coins = (oldSupply / n) * interest; } } If n is greater than oldSupply, coins will be zero. For example, with oldSupply = 5; n = 10, interest = 2, coins will be zero. If (oldSupply * interest / n) was used, coins would have been 1. In general, it's usually a good idea to re-arrange arithmetic to perform multiplication before division, unless the limit of a smaller type makes this dangerous. \u63a8\u8350\u65b9\u5f0f Consider ordering multiplication before division.","title":"Divide before multiply"},{"location":"Divide%20before%20multiply/#divide-before-multiply","text":"","title":"Divide before multiply"},{"location":"Divide%20before%20multiply/#_1","text":"Check: divide-before-multiply Severity: Medium Confidence: Medium","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Divide%20before%20multiply/#_2","text":"Solidity integer division might truncate. As a result, performing multiplication before division can sometimes avoid loss of precision.","title":"\u63cf\u8ff0"},{"location":"Divide%20before%20multiply/#_3","text":"contract A { function f(uint n) public { coins = (oldSupply / n) * interest; } } If n is greater than oldSupply, coins will be zero. For example, with oldSupply = 5; n = 10, interest = 2, coins will be zero. If (oldSupply * interest / n) was used, coins would have been 1. In general, it's usually a good idea to re-arrange arithmetic to perform multiplication before division, unless the limit of a smaller type makes this dangerous.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Divide%20before%20multiply/#_4","text":"Consider ordering multiplication before division.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Function%20Initializing%20State/","text":"Function Initializing State \u57fa\u672c\u60c5\u51b5 Check: function-init-state Severity: Informational Confidence: High \u63cf\u8ff0 Detects the immediate initialization of state variables through function calls that are not pure/constant, or that use non-constant state variable. \u5229\u7528\u6848\u4f8b contract StateVarInitFromFunction { uint public v = set(); // Initialize from function (sets to 77) uint public w = 5; uint public x = set(); // Initialize from function (sets to 88) address public shouldntBeReported = address(8); constructor(){ // The constructor is run after all state variables are initialized. } function set() public returns(uint) { // If this function is being used to initialize a state variable declared // before w, w will be zero. If it is declared after w, w will be set. if(w == 0) { return 77; } return 88; } } In this case, users might intend a function to return a value a state variable can initialize with, without realizing the context for the contract is not fully initialized. In the example above, the same function sets two different values for state variables because it checks a state variable that is not yet initialized in one case, and is initialized in the other. Special care must be taken when initializing state variables from an immediate function call so as not to incorrectly assume the state is initialized. \u63a8\u8350\u65b9\u5f0f Remove any initialization of state variables via non-constant state variables or function calls. If variables must be set upon contract deployment, locate initialization in the constructor instead.","title":"Function Initializing State"},{"location":"Function%20Initializing%20State/#function-initializing-state","text":"","title":"Function Initializing State"},{"location":"Function%20Initializing%20State/#_1","text":"Check: function-init-state Severity: Informational Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Function%20Initializing%20State/#_2","text":"Detects the immediate initialization of state variables through function calls that are not pure/constant, or that use non-constant state variable.","title":"\u63cf\u8ff0"},{"location":"Function%20Initializing%20State/#_3","text":"contract StateVarInitFromFunction { uint public v = set(); // Initialize from function (sets to 77) uint public w = 5; uint public x = set(); // Initialize from function (sets to 88) address public shouldntBeReported = address(8); constructor(){ // The constructor is run after all state variables are initialized. } function set() public returns(uint) { // If this function is being used to initialize a state variable declared // before w, w will be zero. If it is declared after w, w will be set. if(w == 0) { return 77; } return 88; } } In this case, users might intend a function to return a value a state variable can initialize with, without realizing the context for the contract is not fully initialized. In the example above, the same function sets two different values for state variables because it checks a state variable that is not yet initialized in one case, and is initialized in the other. Special care must be taken when initializing state variables from an immediate function call so as not to incorrectly assume the state is initialized.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Function%20Initializing%20State/#_4","text":"Remove any initialization of state variables via non-constant state variables or function calls. If variables must be set upon contract deployment, locate initialization in the constructor instead.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Functions%20that%20send%20Ether%20to%20arbitrary%20destinations/","text":"Functions that send Ether to arbitrary destinations \u57fa\u672c\u60c5\u51b5 \u68c0\u67e5\u5668\uff1aarbitrary-send \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u4e2d \u63cf\u8ff0 \u68c0\u67e5\u6ca1\u88ab\u4fdd\u62a4\u7684\u80fd\u5411\u4efb\u610f\u5730\u5740\u53d1\u9001\u4ee5\u592a\u5e01\u7684\u51fd\u6570 \u5229\u7528\u6848\u4f8b contract ArbitrarySend{ address destination; function setDestination(){ destination = msg.sender; } function withdraw() public{ destination.transfer(this.balance); } } bob\u8c03\u7528setDestination\u548cwithdraw\u51fd\u6570\uff0c\u5bfc\u81f4\u4ed6\u53ef\u4ee5\u76f4\u63a5\u63d0\u53d6\u5408\u7ea6\u7684\u4f59\u989d \u63a8\u8350\u65b9\u5f0f \u786e\u4fdd\u4e0d\u662f\u4efb\u610f\u7684\u7528\u6237\u90fd\u80fd\u63d0\u53d6\u672a\u88ab\u6388\u6743\u7684\u94b1\u5e01\u3002","title":"Functions that send Ether to arbitrary destinations"},{"location":"Functions%20that%20send%20Ether%20to%20arbitrary%20destinations/#functions-that-send-ether-to-arbitrary-destinations","text":"","title":"Functions that send Ether to arbitrary destinations"},{"location":"Functions%20that%20send%20Ether%20to%20arbitrary%20destinations/#_1","text":"\u68c0\u67e5\u5668\uff1aarbitrary-send \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u4e2d","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Functions%20that%20send%20Ether%20to%20arbitrary%20destinations/#_2","text":"\u68c0\u67e5\u6ca1\u88ab\u4fdd\u62a4\u7684\u80fd\u5411\u4efb\u610f\u5730\u5740\u53d1\u9001\u4ee5\u592a\u5e01\u7684\u51fd\u6570","title":"\u63cf\u8ff0"},{"location":"Functions%20that%20send%20Ether%20to%20arbitrary%20destinations/#_3","text":"contract ArbitrarySend{ address destination; function setDestination(){ destination = msg.sender; } function withdraw() public{ destination.transfer(this.balance); } } bob\u8c03\u7528setDestination\u548cwithdraw\u51fd\u6570\uff0c\u5bfc\u81f4\u4ed6\u53ef\u4ee5\u76f4\u63a5\u63d0\u53d6\u5408\u7ea6\u7684\u4f59\u989d","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Functions%20that%20send%20Ether%20to%20arbitrary%20destinations/#_4","text":"\u786e\u4fdd\u4e0d\u662f\u4efb\u610f\u7684\u7528\u6237\u90fd\u80fd\u63d0\u53d6\u672a\u88ab\u6388\u6743\u7684\u94b1\u5e01\u3002","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Incorrect%20erc20%20interface/","text":"Incorrect erc20 interface \u57fa\u672c\u60c5\u51b5 Check: erc20-interface Severity: Medium Confidence: High \u63cf\u8ff0 Incorrect return values for ERC20 functions. A contract compiled with Solidity > 0.4.22 interacting with these functions will fail to execute them, as the return value is missing. \u5229\u7528\u6848\u4f8b contract Token{ function transfer(address to, uint value) external; //... } Token.transfer does not return a boolean. Bob deploys the token. Alice creates a contract that interacts with it but assumes a correct ERC20 interface implementation. Alice's contract is unable to interact with Bob's contract. \u63a8\u8350\u65b9\u5f0f Set the appropriate return values and types for the defined ERC20 functions","title":"Incorrect erc20 interface"},{"location":"Incorrect%20erc20%20interface/#incorrect-erc20-interface","text":"","title":"Incorrect erc20 interface"},{"location":"Incorrect%20erc20%20interface/#_1","text":"Check: erc20-interface Severity: Medium Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Incorrect%20erc20%20interface/#_2","text":"Incorrect return values for ERC20 functions. A contract compiled with Solidity > 0.4.22 interacting with these functions will fail to execute them, as the return value is missing.","title":"\u63cf\u8ff0"},{"location":"Incorrect%20erc20%20interface/#_3","text":"contract Token{ function transfer(address to, uint value) external; //... } Token.transfer does not return a boolean. Bob deploys the token. Alice creates a contract that interacts with it but assumes a correct ERC20 interface implementation. Alice's contract is unable to interact with Bob's contract.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Incorrect%20erc20%20interface/#_4","text":"Set the appropriate return values and types for the defined ERC20 functions","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Incorrect%20erc721%20interface/","text":"Incorrect erc721 interface \u57fa\u672c\u60c5\u51b5 Check: erc721-interface Severity: Medium Confidence: High \u63cf\u8ff0 Incorrect return values for ERC721 functions. A contract compiled with solidity > 0.4.22 interacting with these functions will fail to execute them, as the return value is missing. \u5229\u7528\u6848\u4f8b contract Token{ function ownerOf(uint256 _tokenId) external view returns (bool); //... } Token.ownerOf does not return an address like ERC721 expects. Bob deploys the token. Alice creates a contract that interacts with it but assumes a correct ERC721 interface implementation. Alice's contract is unable to interact with Bob's contract. \u63a8\u8350\u65b9\u5f0f Set the appropriate return values and vtypes for the defined ERC721 functions.","title":"Incorrect erc721 interface"},{"location":"Incorrect%20erc721%20interface/#incorrect-erc721-interface","text":"","title":"Incorrect erc721 interface"},{"location":"Incorrect%20erc721%20interface/#_1","text":"Check: erc721-interface Severity: Medium Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Incorrect%20erc721%20interface/#_2","text":"Incorrect return values for ERC721 functions. A contract compiled with solidity > 0.4.22 interacting with these functions will fail to execute them, as the return value is missing.","title":"\u63cf\u8ff0"},{"location":"Incorrect%20erc721%20interface/#_3","text":"contract Token{ function ownerOf(uint256 _tokenId) external view returns (bool); //... } Token.ownerOf does not return an address like ERC721 expects. Bob deploys the token. Alice creates a contract that interacts with it but assumes a correct ERC721 interface implementation. Alice's contract is unable to interact with Bob's contract.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Incorrect%20erc721%20interface/#_4","text":"Set the appropriate return values and vtypes for the defined ERC721 functions.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Incorrect%20modifier/","text":"Incorrect modifier \u57fa\u672c\u60c5\u51b5 Check: incorrect-modifier Severity: Low Confidence: High \u63cf\u8ff0 If a modifier does not execute _ or revert, the execution of the function will return the default value, which can be misleading for the caller. \u5229\u7528\u6848\u4f8b modidfier myModif(){ if(..){ _; } } function get() myModif returns(uint){ } If the condition in myModif is false, the execution of get() will return 0. \u63a8\u8350\u65b9\u5f0f All the paths in a modifier must execute _ or revert.","title":"Incorrect modifier"},{"location":"Incorrect%20modifier/#incorrect-modifier","text":"","title":"Incorrect modifier"},{"location":"Incorrect%20modifier/#_1","text":"Check: incorrect-modifier Severity: Low Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Incorrect%20modifier/#_2","text":"If a modifier does not execute _ or revert, the execution of the function will return the default value, which can be misleading for the caller.","title":"\u63cf\u8ff0"},{"location":"Incorrect%20modifier/#_3","text":"modidfier myModif(){ if(..){ _; } } function get() myModif returns(uint){ } If the condition in myModif is false, the execution of get() will return 0.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Incorrect%20modifier/#_4","text":"All the paths in a modifier must execute _ or revert.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Incorrect%20shift%20in%20assembly/","text":"Incorrect shift in assembly \u57fa\u672c\u60c5\u51b5 \u68c0\u67e5\u5668\uff1aincorrect-shift \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u9ad8 \u63cf\u8ff0 \u68c0\u67e5\u5728\u8fdb\u884c\u79fb\u4f4d\u64cd\u4f5c\u65f6\u7684\u53d8\u91cf\u662f\u5426\u4f20\u53cd\u3002 \u5229\u7528\u6848\u4f8b contract C { function f() internal returns (uint a) { assembly { a := shr(a, 8) } } } \u8fd9\u884c\u79fb\u4f4d\u8bed\u53e5\u4f1a\u5c06\u5e38\u65708\u53f3\u79fba\u4e2abit\u3002 \u63a8\u8350\u65b9\u5f0f \u4ea4\u6362\u53c2\u6570\u7684\u987a\u5e8f","title":"Incorrect shift in assembly"},{"location":"Incorrect%20shift%20in%20assembly/#incorrect-shift-in-assembly","text":"","title":"Incorrect shift in assembly"},{"location":"Incorrect%20shift%20in%20assembly/#_1","text":"\u68c0\u67e5\u5668\uff1aincorrect-shift \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u9ad8","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Incorrect%20shift%20in%20assembly/#_2","text":"\u68c0\u67e5\u5728\u8fdb\u884c\u79fb\u4f4d\u64cd\u4f5c\u65f6\u7684\u53d8\u91cf\u662f\u5426\u4f20\u53cd\u3002","title":"\u63cf\u8ff0"},{"location":"Incorrect%20shift%20in%20assembly/#_3","text":"contract C { function f() internal returns (uint a) { assembly { a := shr(a, 8) } } } \u8fd9\u884c\u79fb\u4f4d\u8bed\u53e5\u4f1a\u5c06\u5e38\u65708\u53f3\u79fba\u4e2abit\u3002","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Incorrect%20shift%20in%20assembly/#_4","text":"\u4ea4\u6362\u53c2\u6570\u7684\u987a\u5e8f","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Incorrect%20versions%20of%20Solidity/","text":"Incorrect versions of Solidity \u57fa\u672c\u60c5\u51b5 Check: solc-version Severity: Informational Confidence: High \u63cf\u8ff0 solc frequently releases new compiler versions. Using an old version prevents access to new Solidity security checks. We also recommend avoiding complex pragma statement. \u63a8\u8350\u65b9\u5f0f Deploy with any of the following Solidity versions: 0.5.16 - 0.5.17 0.6.11 - 0.6.12 0.7.5 - 0.7.6 Use a simple pragma version that allows any of these versions. Consider using the latest version of Solidity for testing.","title":"Incorrect versions of Solidity"},{"location":"Incorrect%20versions%20of%20Solidity/#incorrect-versions-of-solidity","text":"","title":"Incorrect versions of Solidity"},{"location":"Incorrect%20versions%20of%20Solidity/#_1","text":"Check: solc-version Severity: Informational Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Incorrect%20versions%20of%20Solidity/#_2","text":"solc frequently releases new compiler versions. Using an old version prevents access to new Solidity security checks. We also recommend avoiding complex pragma statement.","title":"\u63cf\u8ff0"},{"location":"Incorrect%20versions%20of%20Solidity/#_3","text":"Deploy with any of the following Solidity versions: 0.5.16 - 0.5.17 0.6.11 - 0.6.12 0.7.5 - 0.7.6 Use a simple pragma version that allows any of these versions. Consider using the latest version of Solidity for testing.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Local%20variable%20shadowing/","text":"Local variable shadowing \u57fa\u672c\u60c5\u51b5 Check: shadowing-local Severity: Low Confidence: High \u63cf\u8ff0 Detection of shadowing using local variables. \u5229\u7528\u6848\u4f8b pragma solidity ^0.4.24; contract Bug { uint owner; function sensitive_function(address owner) public { // ... require(owner == msg.sender); } function alternate_sensitive_function() public { address owner = msg.sender; // ... require(owner == msg.sender); } } sensitive_function.owner shadows Bug.owner. As a result, the use of owner in sensitive_function might be incorrect. \u63a8\u8350\u65b9\u5f0f Rename the local variables that shadow another component.","title":"Local variable shadowing"},{"location":"Local%20variable%20shadowing/#local-variable-shadowing","text":"","title":"Local variable shadowing"},{"location":"Local%20variable%20shadowing/#_1","text":"Check: shadowing-local Severity: Low Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Local%20variable%20shadowing/#_2","text":"Detection of shadowing using local variables.","title":"\u63cf\u8ff0"},{"location":"Local%20variable%20shadowing/#_3","text":"pragma solidity ^0.4.24; contract Bug { uint owner; function sensitive_function(address owner) public { // ... require(owner == msg.sender); } function alternate_sensitive_function() public { address owner = msg.sender; // ... require(owner == msg.sender); } } sensitive_function.owner shadows Bug.owner. As a result, the use of owner in sensitive_function might be incorrect.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Local%20variable%20shadowing/#_4","text":"Rename the local variables that shadow another component.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Low-level%20calls/","text":"Low-level calls \u57fa\u672c\u60c5\u51b5 Check: low-level-calls Severity: Informational Confidence: High \u63cf\u8ff0 The use of low-level calls is error-prone. Low-level calls do not check for code existence or call success. \u63a8\u8350\u65b9\u5f0f Avoid low-level calls. Check the call success. If the call is meant for a contract, check for code existence.","title":"Low-level calls"},{"location":"Low-level%20calls/#low-level-calls","text":"","title":"Low-level calls"},{"location":"Low-level%20calls/#_1","text":"Check: low-level-calls Severity: Informational Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Low-level%20calls/#_2","text":"The use of low-level calls is error-prone. Low-level calls do not check for code existence or call success.","title":"\u63cf\u8ff0"},{"location":"Low-level%20calls/#_3","text":"Avoid low-level calls. Check the call success. If the call is meant for a contract, check for code existence.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Missing%20events%20access%20control/","text":"Missing events access control \u57fa\u672c\u60c5\u51b5 Check: events-access Severity: Low Confidence: Medium \u63cf\u8ff0 Detect missing events for critical access control parameters \u5229\u7528\u6848\u4f8b contract C { modifier onlyAdmin { if (msg.sender != owner) throw; _; } function updateOwner(address newOwner) onlyAdmin external { owner = newOwner; } } updateOwner() has no event, so it is difficult to track off-chain owner changes. \u63a8\u8350\u65b9\u5f0f Emit an event for critical parameter changes.","title":"Missing events access control"},{"location":"Missing%20events%20access%20control/#missing-events-access-control","text":"","title":"Missing events access control"},{"location":"Missing%20events%20access%20control/#_1","text":"Check: events-access Severity: Low Confidence: Medium","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Missing%20events%20access%20control/#_2","text":"Detect missing events for critical access control parameters","title":"\u63cf\u8ff0"},{"location":"Missing%20events%20access%20control/#_3","text":"contract C { modifier onlyAdmin { if (msg.sender != owner) throw; _; } function updateOwner(address newOwner) onlyAdmin external { owner = newOwner; } } updateOwner() has no event, so it is difficult to track off-chain owner changes.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Missing%20events%20access%20control/#_4","text":"Emit an event for critical parameter changes.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Missing%20events%20arithmetic/","text":"Missing events arithmetic \u57fa\u672c\u60c5\u51b5 Check: events-maths Severity: Low Confidence: Medium \u63cf\u8ff0 Detect missing events for critical arithmetic parameters. \u5229\u7528\u6848\u4f8b contract C { modifier onlyOwner { if (msg.sender != owner) throw; _; } function setBuyPrice(uint256 newBuyPrice) onlyOwner public { buyPrice = newBuyPrice; } function buy() external { ... // buyPrice is used to determine the number of tokens purchased } } updateOwner() has no event, so it is difficult to track off-chain changes in the buy price. \u63a8\u8350\u65b9\u5f0f Emit an event for critical parameter changes.","title":"Missing events arithmetic"},{"location":"Missing%20events%20arithmetic/#missing-events-arithmetic","text":"","title":"Missing events arithmetic"},{"location":"Missing%20events%20arithmetic/#_1","text":"Check: events-maths Severity: Low Confidence: Medium","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Missing%20events%20arithmetic/#_2","text":"Detect missing events for critical arithmetic parameters.","title":"\u63cf\u8ff0"},{"location":"Missing%20events%20arithmetic/#_3","text":"contract C { modifier onlyOwner { if (msg.sender != owner) throw; _; } function setBuyPrice(uint256 newBuyPrice) onlyOwner public { buyPrice = newBuyPrice; } function buy() external { ... // buyPrice is used to determine the number of tokens purchased } } updateOwner() has no event, so it is difficult to track off-chain changes in the buy price.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Missing%20events%20arithmetic/#_4","text":"Emit an event for critical parameter changes.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Missing%20inheritance/","text":"Missing inheritance \u57fa\u672c\u60c5\u51b5 Check: missing-inheritance Severity: Informational Confidence: High \u63cf\u8ff0 Detect missing inheritance. \u5229\u7528\u6848\u4f8b interface ISomething { function f1() external returns(uint); } contract Something { function f1() external returns(uint){ return 42; } } Something should inherit from ISomething. \u63a8\u8350\u65b9\u5f0f Inherit from the missing interface or contract.","title":"Missing inheritance"},{"location":"Missing%20inheritance/#missing-inheritance","text":"","title":"Missing inheritance"},{"location":"Missing%20inheritance/#_1","text":"Check: missing-inheritance Severity: Informational Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Missing%20inheritance/#_2","text":"Detect missing inheritance.","title":"\u63cf\u8ff0"},{"location":"Missing%20inheritance/#_3","text":"interface ISomething { function f1() external returns(uint); } contract Something { function f1() external returns(uint){ return 42; } } Something should inherit from ISomething.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Missing%20inheritance/#_4","text":"Inherit from the missing interface or contract.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Missing%20zero%20address%20validation/","text":"Missing zero address validation \u57fa\u672c\u60c5\u51b5 Check: missing-zero-check Severity: Low Confidence: Medium \u63cf\u8ff0 Detect missing zero address validation. \u5229\u7528\u6848\u4f8b contract C { modifier onlyAdmin { if (msg.sender != owner) throw; _; } function updateOwner(address newOwner) onlyAdmin external { owner = newOwner; } } Bob calls updateOwner without specifying the newOwner, soBob loses ownership of the contract. \u63a8\u8350\u65b9\u5f0f Check that the address is not zero.","title":"Missing zero address validation"},{"location":"Missing%20zero%20address%20validation/#missing-zero-address-validation","text":"","title":"Missing zero address validation"},{"location":"Missing%20zero%20address%20validation/#_1","text":"Check: missing-zero-check Severity: Low Confidence: Medium","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Missing%20zero%20address%20validation/#_2","text":"Detect missing zero address validation.","title":"\u63cf\u8ff0"},{"location":"Missing%20zero%20address%20validation/#_3","text":"contract C { modifier onlyAdmin { if (msg.sender != owner) throw; _; } function updateOwner(address newOwner) onlyAdmin external { owner = newOwner; } } Bob calls updateOwner without specifying the newOwner, soBob loses ownership of the contract.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Missing%20zero%20address%20validation/#_4","text":"Check that the address is not zero.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Misuse%20of%20a%20Boolean%20constant/","text":"Misuse of a Boolean constant \u57fa\u672c\u60c5\u51b5 Check: boolean-cst Severity: Medium Confidence: Medium \u63cf\u8ff0 Detects the misuse of a Boolean constant. \u5229\u7528\u6848\u4f8b contract A { function f(uint x) public { // ... if (false) { // bad! // ... } // ... } function g(bool b) public returns (bool) { // ... return (b || true); // bad! // ... } } Boolean constants in code have only a few legitimate uses. Other uses (in complex expressions, as conditionals) indicate either an error or, most likely, the persistence of faulty code. \u63a8\u8350\u65b9\u5f0f Verify and simplify the condition.","title":"Misuse of a Boolean constant"},{"location":"Misuse%20of%20a%20Boolean%20constant/#misuse-of-a-boolean-constant","text":"","title":"Misuse of a Boolean constant"},{"location":"Misuse%20of%20a%20Boolean%20constant/#_1","text":"Check: boolean-cst Severity: Medium Confidence: Medium","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Misuse%20of%20a%20Boolean%20constant/#_2","text":"Detects the misuse of a Boolean constant.","title":"\u63cf\u8ff0"},{"location":"Misuse%20of%20a%20Boolean%20constant/#_3","text":"contract A { function f(uint x) public { // ... if (false) { // bad! // ... } // ... } function g(bool b) public returns (bool) { // ... return (b || true); // bad! // ... } } Boolean constants in code have only a few legitimate uses. Other uses (in complex expressions, as conditionals) indicate either an error or, most likely, the persistence of faulty code.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Misuse%20of%20a%20Boolean%20constant/#_4","text":"Verify and simplify the condition.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Modifying%20storage%20array%20by%20value/","text":"Modifying storage array by value \u57fa\u672c\u60c5\u51b5 \u68c0\u67e5\u5668\uff1aarray-by-reference \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u9ad8 \u63cf\u8ff0 \u68c0\u6d4b\u5230\u6570\u7ec4\u4f20\u9012\u7ed9\u4e86\u4e00\u4e2a\u671f\u671b\u901a\u8fc7\u5f15\u7528\u4f20\u9012\u6765\u5b58\u50a8\u6570\u7ec4\u7684\u51fd\u6570 \u5229\u7528\u6848\u4f8b contract Memory { uint[1] public x; // storage function f() public { f1(x); // update x f2(x); // do not update x } function f1(uint[1] storage arr) internal { // by reference arr[0] = 1; } function f2(uint[1] arr) internal { // by value arr[0] = 2; } } bob\u8c03\u7528\u4e86f()\u51fd\u6570\u3002bob\u4ee5\u4e3a\u8c03\u7528\u8fc7\u7a0b\u7ed3\u675f\u65f6\uff0cx[0]\u662f2\uff0c\u4f46\u662f\u786e\u5b9e1\u3002\u7ed3\u679c\u5bfc\u81f4bob\u5bf9\u5408\u7ea6\u7684\u8c03\u7528\u662f\u4e0d\u6b63\u786e\u7684\u3002 \u63a8\u8350\u65b9\u5f0f \u786e\u4fdd\u8c03\u7528\u51fd\u6570\u65f6\u4f7f\u7528\u7684memory\u548cstorage\u53c2\u6570\u662f\u6b63\u786e\u7684\uff0c\u4f7f\u5f97\u6240\u6709\u7684\u5b58\u50a8\u90fd\u662f\u660e\u786e\u7684\u3002","title":"Modifying storage array by value"},{"location":"Modifying%20storage%20array%20by%20value/#modifying-storage-array-by-value","text":"","title":"Modifying storage array by value"},{"location":"Modifying%20storage%20array%20by%20value/#_1","text":"\u68c0\u67e5\u5668\uff1aarray-by-reference \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u9ad8","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Modifying%20storage%20array%20by%20value/#_2","text":"\u68c0\u6d4b\u5230\u6570\u7ec4\u4f20\u9012\u7ed9\u4e86\u4e00\u4e2a\u671f\u671b\u901a\u8fc7\u5f15\u7528\u4f20\u9012\u6765\u5b58\u50a8\u6570\u7ec4\u7684\u51fd\u6570","title":"\u63cf\u8ff0"},{"location":"Modifying%20storage%20array%20by%20value/#_3","text":"contract Memory { uint[1] public x; // storage function f() public { f1(x); // update x f2(x); // do not update x } function f1(uint[1] storage arr) internal { // by reference arr[0] = 1; } function f2(uint[1] arr) internal { // by value arr[0] = 2; } } bob\u8c03\u7528\u4e86f()\u51fd\u6570\u3002bob\u4ee5\u4e3a\u8c03\u7528\u8fc7\u7a0b\u7ed3\u675f\u65f6\uff0cx[0]\u662f2\uff0c\u4f46\u662f\u786e\u5b9e1\u3002\u7ed3\u679c\u5bfc\u81f4bob\u5bf9\u5408\u7ea6\u7684\u8c03\u7528\u662f\u4e0d\u6b63\u786e\u7684\u3002","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Modifying%20storage%20array%20by%20value/#_4","text":"\u786e\u4fdd\u8c03\u7528\u51fd\u6570\u65f6\u4f7f\u7528\u7684memory\u548cstorage\u53c2\u6570\u662f\u6b63\u786e\u7684\uff0c\u4f7f\u5f97\u6240\u6709\u7684\u5b58\u50a8\u90fd\u662f\u660e\u786e\u7684\u3002","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Multiple%20constructor%20schemes/","text":"Incorrect shift in assembly \u57fa\u672c\u60c5\u51b5 \u68c0\u67e5\u5668\uff1amultiple-constructors \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u9ad8 \u63cf\u8ff0 \u68c0\u67e5\u5728\u540c\u4e00\u4e2a\u5408\u7ea6\u4e2d\u662f\u5426\u5b58\u5728\u591a\u4e2a\u6784\u9020\u51fd\u6570\uff08\u4f7f\u7528\u65b0\u7684\u548c\u65e7\u7684\u8bed\u6cd5\u683c\u5f0f\uff09 \u5229\u7528\u6848\u4f8b contract A { uint x; constructor() public { x = 0; } function A() public { x = 1; } function test() public returns(uint) { return x; } } \u57280.4.22\u7248\u672c\u7684solidity\u7f16\u8bd1\u5668\u4e2d\uff0c\u4e0d\u540c\u8bed\u6cd5\u683c\u5f0f\u7684\u6784\u9020\u51fd\u6570\u90fd\u4f1a\u88ab\u7f16\u8bd1\uff0c\u7b2c\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u5c06\u4f18\u5148\u4e8e\u7b2c\u4e8c\u4e2a\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u610f\u5916\u53d1\u751f\u3002 \u63a8\u8350\u65b9\u5f0f \u53ea\u5b9a\u4e49\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u63a8\u8350\u4f7f\u7528\u65b0\u7684\u8bed\u6cd5\u683c\u5f0f constuctor(...) \u4ee3\u66ff function <contractName>(...)","title":"Incorrect shift in assembly"},{"location":"Multiple%20constructor%20schemes/#incorrect-shift-in-assembly","text":"","title":"Incorrect shift in assembly"},{"location":"Multiple%20constructor%20schemes/#_1","text":"\u68c0\u67e5\u5668\uff1amultiple-constructors \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u9ad8","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Multiple%20constructor%20schemes/#_2","text":"\u68c0\u67e5\u5728\u540c\u4e00\u4e2a\u5408\u7ea6\u4e2d\u662f\u5426\u5b58\u5728\u591a\u4e2a\u6784\u9020\u51fd\u6570\uff08\u4f7f\u7528\u65b0\u7684\u548c\u65e7\u7684\u8bed\u6cd5\u683c\u5f0f\uff09","title":"\u63cf\u8ff0"},{"location":"Multiple%20constructor%20schemes/#_3","text":"contract A { uint x; constructor() public { x = 0; } function A() public { x = 1; } function test() public returns(uint) { return x; } } \u57280.4.22\u7248\u672c\u7684solidity\u7f16\u8bd1\u5668\u4e2d\uff0c\u4e0d\u540c\u8bed\u6cd5\u683c\u5f0f\u7684\u6784\u9020\u51fd\u6570\u90fd\u4f1a\u88ab\u7f16\u8bd1\uff0c\u7b2c\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u5c06\u4f18\u5148\u4e8e\u7b2c\u4e8c\u4e2a\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u610f\u5916\u53d1\u751f\u3002","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Multiple%20constructor%20schemes/#_4","text":"\u53ea\u5b9a\u4e49\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u63a8\u8350\u4f7f\u7528\u65b0\u7684\u8bed\u6cd5\u683c\u5f0f constuctor(...) \u4ee3\u66ff function <contractName>(...)","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Name%20reused/","text":"Name reused \u57fa\u672c\u60c5\u51b5 \u68c0\u67e5\u5668\uff1aname-reused \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u9ad8 \u63cf\u8ff0 \u5982\u679c\u4e00\u4e2a\u4ee3\u7801\u5e93\u4e2d\u542b\u6709\u4e24\u4e2a\u540d\u5b57\u76f8\u540c\u7684\u5408\u7ea6\uff0c\u90a3\u4e48\u7f16\u8bd1\u7ec4\u4ef6\u5c06\u4f1a\u4e0d\u5305\u542b\u5176\u4e2d\u4e00\u4e2a\u540d\u5b57\u91cd\u590d\u7684\u5408\u7ea6 \u5229\u7528\u6848\u4f8b bob\u7684truffle\u4ee3\u7801\u5e93\u6709\u4e24\u4e2a\u540d\u5b57\u90fd\u53ebERC20\u7684\u5408\u7ea6\uff0c\u5f53truffle\u7f16\u8bd1\u5668\u8fd0\u884c\u65f6\uff0c\u53ea\u6709\u5176\u4e2d\u7684\u4e00\u4e2a\u5408\u7ea6\u5c06\u4f1a\u4ea7\u751f\u7f16\u8bd1\u6587\u4ef6\uff0c\u8fd9\u6837\u5c31\u4f1a\u5bfc\u81f4\u7b2c\u4e8c\u4e2a\u5408\u7ea6\u4e0d\u80fd\u88ab\u5206\u6790\u3002 \u63a8\u8350\u65b9\u5f0f \u5c06\u5408\u7ea6\u91cd\u547d\u540d","title":"Name reused"},{"location":"Name%20reused/#name-reused","text":"","title":"Name reused"},{"location":"Name%20reused/#_1","text":"\u68c0\u67e5\u5668\uff1aname-reused \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u9ad8","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Name%20reused/#_2","text":"\u5982\u679c\u4e00\u4e2a\u4ee3\u7801\u5e93\u4e2d\u542b\u6709\u4e24\u4e2a\u540d\u5b57\u76f8\u540c\u7684\u5408\u7ea6\uff0c\u90a3\u4e48\u7f16\u8bd1\u7ec4\u4ef6\u5c06\u4f1a\u4e0d\u5305\u542b\u5176\u4e2d\u4e00\u4e2a\u540d\u5b57\u91cd\u590d\u7684\u5408\u7ea6","title":"\u63cf\u8ff0"},{"location":"Name%20reused/#_3","text":"bob\u7684truffle\u4ee3\u7801\u5e93\u6709\u4e24\u4e2a\u540d\u5b57\u90fd\u53ebERC20\u7684\u5408\u7ea6\uff0c\u5f53truffle\u7f16\u8bd1\u5668\u8fd0\u884c\u65f6\uff0c\u53ea\u6709\u5176\u4e2d\u7684\u4e00\u4e2a\u5408\u7ea6\u5c06\u4f1a\u4ea7\u751f\u7f16\u8bd1\u6587\u4ef6\uff0c\u8fd9\u6837\u5c31\u4f1a\u5bfc\u81f4\u7b2c\u4e8c\u4e2a\u5408\u7ea6\u4e0d\u80fd\u88ab\u5206\u6790\u3002","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Name%20reused/#_4","text":"\u5c06\u5408\u7ea6\u91cd\u547d\u540d","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Pre-declaration%20usage%20of%20local%20variables/","text":"Pre-declaration usage of local variables \u57fa\u672c\u60c5\u51b5 Check: variable-scope Severity: Low Confidence: High \u63cf\u8ff0 Detects the possible usage of a variable before the declaration is stepped over (either because it is later declared, or declared in another scope). \u5229\u7528\u6848\u4f8b contract C { function f(uint z) public returns (uint) { uint y = x + 9 + z; // 'z' is used pre-declaration uint x = 7; if (z % 2 == 0) { uint max = 5; // ... } // 'max' was intended to be 5, but it was mistakenly declared in a scope and not assigned (so it is zero). for (uint i = 0; i < max; i++) { x += 1; } return x; } } In the case above, the variable x is used before its declaration, which may result in unintended consequences. Additionally, the for-loop uses the variable max, which is declared in a previous scope that may not always be reached. This could lead to unintended consequences if the user mistakenly uses a variable prior to any intended declaration assignment. It also may indicate that the user intended to reference a different variable. \u63a8\u8350\u65b9\u5f0f Move all variable declarations prior to any usage of the variable, and ensure that reaching a variable declaration does not depend on some conditional if it is used unconditionally.","title":"Pre-declaration usage of local variables"},{"location":"Pre-declaration%20usage%20of%20local%20variables/#pre-declaration-usage-of-local-variables","text":"","title":"Pre-declaration usage of local variables"},{"location":"Pre-declaration%20usage%20of%20local%20variables/#_1","text":"Check: variable-scope Severity: Low Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Pre-declaration%20usage%20of%20local%20variables/#_2","text":"Detects the possible usage of a variable before the declaration is stepped over (either because it is later declared, or declared in another scope).","title":"\u63cf\u8ff0"},{"location":"Pre-declaration%20usage%20of%20local%20variables/#_3","text":"contract C { function f(uint z) public returns (uint) { uint y = x + 9 + z; // 'z' is used pre-declaration uint x = 7; if (z % 2 == 0) { uint max = 5; // ... } // 'max' was intended to be 5, but it was mistakenly declared in a scope and not assigned (so it is zero). for (uint i = 0; i < max; i++) { x += 1; } return x; } } In the case above, the variable x is used before its declaration, which may result in unintended consequences. Additionally, the for-loop uses the variable max, which is declared in a previous scope that may not always be reached. This could lead to unintended consequences if the user mistakenly uses a variable prior to any intended declaration assignment. It also may indicate that the user intended to reference a different variable.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Pre-declaration%20usage%20of%20local%20variables/#_4","text":"Move all variable declarations prior to any usage of the variable, and ensure that reaching a variable declaration does not depend on some conditional if it is used unconditionally.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Public%20function%20that%20could%20be%20declared%20external/","text":"Public function that could be declared external \u57fa\u672c\u60c5\u51b5 Check: external-function Severity: Optimization Confidence: High \u63cf\u8ff0 public functions that are never called by the contract should be declared external to save gas. \u63a8\u8350\u65b9\u5f0f Use the external attribute for functions never called from the contract.","title":"Public function that could be declared external"},{"location":"Public%20function%20that%20could%20be%20declared%20external/#public-function-that-could-be-declared-external","text":"","title":"Public function that could be declared external"},{"location":"Public%20function%20that%20could%20be%20declared%20external/#_1","text":"Check: external-function Severity: Optimization Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Public%20function%20that%20could%20be%20declared%20external/#_2","text":"public functions that are never called by the contract should be declared external to save gas.","title":"\u63cf\u8ff0"},{"location":"Public%20function%20that%20could%20be%20declared%20external/#_3","text":"Use the external attribute for functions never called from the contract.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Public%20mappings%20with%20nested%20variables/","text":"Public mappings with nested variables \u57fa\u672c\u60c5\u51b5 \u68c0\u67e5\u5668\uff1apublic-mappings-nested \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u9ad8 \u63cf\u8ff0 \u57280.5\u53ca\u4e4b\u524d\u7248\u672c\u7684solidity\u7f16\u8bd1\u5668\u4e2d\uff0c\u5e26\u6709\u5d4c\u5957\u7ed3\u6784\u7684\u516c\u5171\u6620\u5c04\u5c06\u4f1a\u8fd4\u56de\u4e0d\u6b63\u786e\u7684\u503c \u5229\u7528\u6848\u4f8b bob\u4e0e\u4e00\u4e2a\u5e26\u6709\u5d4c\u5957\u7ed3\u6784\u7684\u516c\u5171\u6620\u5c04\u7684\u5408\u7ea6\u8fdb\u884c\u4ea4\u4e92\u65f6\uff0c\u8fd9\u4e2a\u6620\u5c04\u8fd4\u56de\u7684\u503c\u662f\u4e0d\u6b63\u786e\u7684\uff0c\u4f1a\u7834\u574fbob\u7684\u6b63\u5e38\u4f7f\u7528\u3002 \u63a8\u8350\u65b9\u5f0f \u4e0d\u8981\u4f7f\u7528\u5e26\u6709\u5d4c\u5957\u7ed3\u6784\u7684\u516c\u5171\u6620\u5c04","title":"Public mappings with nested variables"},{"location":"Public%20mappings%20with%20nested%20variables/#public-mappings-with-nested-variables","text":"","title":"Public mappings with nested variables"},{"location":"Public%20mappings%20with%20nested%20variables/#_1","text":"\u68c0\u67e5\u5668\uff1apublic-mappings-nested \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u9ad8","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Public%20mappings%20with%20nested%20variables/#_2","text":"\u57280.5\u53ca\u4e4b\u524d\u7248\u672c\u7684solidity\u7f16\u8bd1\u5668\u4e2d\uff0c\u5e26\u6709\u5d4c\u5957\u7ed3\u6784\u7684\u516c\u5171\u6620\u5c04\u5c06\u4f1a\u8fd4\u56de\u4e0d\u6b63\u786e\u7684\u503c","title":"\u63cf\u8ff0"},{"location":"Public%20mappings%20with%20nested%20variables/#_3","text":"bob\u4e0e\u4e00\u4e2a\u5e26\u6709\u5d4c\u5957\u7ed3\u6784\u7684\u516c\u5171\u6620\u5c04\u7684\u5408\u7ea6\u8fdb\u884c\u4ea4\u4e92\u65f6\uff0c\u8fd9\u4e2a\u6620\u5c04\u8fd4\u56de\u7684\u503c\u662f\u4e0d\u6b63\u786e\u7684\uff0c\u4f1a\u7834\u574fbob\u7684\u6b63\u5e38\u4f7f\u7528\u3002","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Public%20mappings%20with%20nested%20variables/#_4","text":"\u4e0d\u8981\u4f7f\u7528\u5e26\u6709\u5d4c\u5957\u7ed3\u6784\u7684\u516c\u5171\u6620\u5c04","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Redundant%20Statements/","text":"Redundant Statements \u57fa\u672c\u60c5\u51b5 Check: redundant-statements Severity: Informational Confidence: High \u63cf\u8ff0 Detect the usage of redundant statements that have no effect. \u5229\u7528\u6848\u4f8b contract RedundantStatementsContract { constructor() public { uint; // Elementary Type Name bool; // Elementary Type Name RedundantStatementsContract; // Identifier } function test() public returns (uint) { uint; // Elementary Type Name assert; // Identifier test; // Identifier return 777; } } Each commented line references types/identifiers, but performs no action with them, so no code will be generated for such statements and they can be removed. \u63a8\u8350\u65b9\u5f0f Remove redundant statements if they congest code but offer no value.","title":"Redundant Statements"},{"location":"Redundant%20Statements/#redundant-statements","text":"","title":"Redundant Statements"},{"location":"Redundant%20Statements/#_1","text":"Check: redundant-statements Severity: Informational Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Redundant%20Statements/#_2","text":"Detect the usage of redundant statements that have no effect.","title":"\u63cf\u8ff0"},{"location":"Redundant%20Statements/#_3","text":"contract RedundantStatementsContract { constructor() public { uint; // Elementary Type Name bool; // Elementary Type Name RedundantStatementsContract; // Identifier } function test() public returns (uint) { uint; // Elementary Type Name assert; // Identifier test; // Identifier return 777; } } Each commented line references types/identifiers, but performs no action with them, so no code will be generated for such statements and they can be removed.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Redundant%20Statements/#_4","text":"Remove redundant statements if they congest code but offer no value.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Reentrancy%20vulnerabilities/","text":"Reentrancy vulnerabilities \u57fa\u672c\u60c5\u51b5 \u68c0\u67e5\u5668\uff1areentrancy-eth \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u4e2d \u63cf\u8ff0 \u68c0\u67e5\u91cd\u5165\u6f0f\u6d1e\uff0c\u4e0d\u62a5\u544a\u4e0d\u6d89\u53ca\u5230\u4ee5\u592a\u5e01\u7684\u91cd\u5165 \u5229\u7528\u6848\u4f8b function withdrawBalance(){ // send userBalance[msg.sender] Ether to msg.sender // if mgs.sender is a contract, it will call its fallback function if( ! (msg.sender.call.value(userBalance[msg.sender])() ) ){ throw; } userBalance[msg.sender] = 0; }contract Delegatecall{ function delegate(address to, bytes data){ to.delegatecall(data); } } bob\u4f7f\u7528\u91cd\u5165\u6f0f\u6d1e\u53bb\u8c03\u7528withdrawBalance\u4e24\u6b21\uff0c\u63d0\u53d6\u8d85\u8fc7\u5176\u5bf9\u5408\u540c\u7684\u521d\u59cb\u5b58\u6b3e\u3002 \u63a8\u8350\u65b9\u5f0f \u5e94\u7528 check-effects-interactions pattern \u6a21\u5f0f","title":"Reentrancy vulnerabilities"},{"location":"Reentrancy%20vulnerabilities/#reentrancy-vulnerabilities","text":"","title":"Reentrancy vulnerabilities"},{"location":"Reentrancy%20vulnerabilities/#_1","text":"\u68c0\u67e5\u5668\uff1areentrancy-eth \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u4e2d","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Reentrancy%20vulnerabilities/#_2","text":"\u68c0\u67e5\u91cd\u5165\u6f0f\u6d1e\uff0c\u4e0d\u62a5\u544a\u4e0d\u6d89\u53ca\u5230\u4ee5\u592a\u5e01\u7684\u91cd\u5165","title":"\u63cf\u8ff0"},{"location":"Reentrancy%20vulnerabilities/#_3","text":"function withdrawBalance(){ // send userBalance[msg.sender] Ether to msg.sender // if mgs.sender is a contract, it will call its fallback function if( ! (msg.sender.call.value(userBalance[msg.sender])() ) ){ throw; } userBalance[msg.sender] = 0; }contract Delegatecall{ function delegate(address to, bytes data){ to.delegatecall(data); } } bob\u4f7f\u7528\u91cd\u5165\u6f0f\u6d1e\u53bb\u8c03\u7528withdrawBalance\u4e24\u6b21\uff0c\u63d0\u53d6\u8d85\u8fc7\u5176\u5bf9\u5408\u540c\u7684\u521d\u59cb\u5b58\u6b3e\u3002","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Reentrancy%20vulnerabilities/#_4","text":"\u5e94\u7528 check-effects-interactions pattern \u6a21\u5f0f","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Reused%20base%20constructors/","text":"Reused base constructors \u57fa\u672c\u60c5\u51b5 Check: reused-constructor Severity: Medium Confidence: Medium \u63cf\u8ff0 Detects if the same base constructor is called with arguments from two different locations in the same inheritance hierarchy. \u5229\u7528\u6848\u4f8b pragma solidity ^0.4.0; contract A{ uint num = 5; constructor(uint x) public{ num += x; } } contract B is A{ constructor() A(2) public { /* ... */ } } contract C is A { constructor() A(3) public { /* ... */ } } contract D is B, C { constructor() public { /* ... */ } } contract E is B { constructor() A(1) public { /* ... */ } } The constructor of A is called multiple times in D and E: D inherits from B and C, both of which construct A. E only inherits from B, but B and E construct A. . \u63a8\u8350\u65b9\u5f0f Remove the duplicate constructor call.","title":"Reused base constructors"},{"location":"Reused%20base%20constructors/#reused-base-constructors","text":"","title":"Reused base constructors"},{"location":"Reused%20base%20constructors/#_1","text":"Check: reused-constructor Severity: Medium Confidence: Medium","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Reused%20base%20constructors/#_2","text":"Detects if the same base constructor is called with arguments from two different locations in the same inheritance hierarchy.","title":"\u63cf\u8ff0"},{"location":"Reused%20base%20constructors/#_3","text":"pragma solidity ^0.4.0; contract A{ uint num = 5; constructor(uint x) public{ num += x; } } contract B is A{ constructor() A(2) public { /* ... */ } } contract C is A { constructor() A(3) public { /* ... */ } } contract D is B, C { constructor() public { /* ... */ } } contract E is B { constructor() A(1) public { /* ... */ } } The constructor of A is called multiple times in D and E: D inherits from B and C, both of which construct A. E only inherits from B, but B and E construct A. .","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Reused%20base%20constructors/#_4","text":"Remove the duplicate constructor call.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Right-to-Left-Override%20character/","text":"Right-to-Left-Override character \u57fa\u672c\u60c5\u51b5 \u68c0\u67e5\u5668\uff1artlo \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u9ad8 \u63cf\u8ff0 \u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u4ece\u53f3\u5230\u5de6\u7684\u91cd\u5199\u5b57\u7b26\u6765\u64cd\u7eb5\u5408\u540c\u7684\u903b\u8f91\u3002 \u5229\u7528\u6848\u4f8b contract Token { address payable o; // owner mapping(address => uint) tokens; function withdraw() external returns(uint) { uint amount = tokens[msg.sender]; address payable d = msg.sender; tokens[msg.sender] = 0; _withdraw(/*owner\u202e/*noitanitsed*/ d, o/*\u202d /*value */, amount); } function _withdraw(address payable fee_receiver, address payable destination, uint value) internal { fee_receiver.transfer(1); destination.transfer(value); } } \u5f53 Token \u8c03\u7528 _withdraw \u51fd\u6570\u65f6\uff0c\u4f7f\u7528\u4ece\u53f3\u5230\u5de6\u91cd\u5199\u5b57\u7b26\uff0c\u7ed3\u679c\u5bfc\u81f4\u8d39\u7528\u88ab\u9519\u8bef\u5730\u53d1\u9001\u7ed9msg.sender\uff0c\u5e76\u4e14token\u4f59\u989d\u88ab\u53d1\u9001\u7ed9\u5408\u7ea6\u62e5\u6709\u8005\u3002 \u63a8\u8350\u65b9\u5f0f \u5bf9\u5b57\u7b26\u7684\u7279\u6b8a\u64cd\u4f5c\u662f\u4e0d\u5141\u8bb8\u7684","title":"Right-to-Left-Override character"},{"location":"Right-to-Left-Override%20character/#right-to-left-override-character","text":"","title":"Right-to-Left-Override character"},{"location":"Right-to-Left-Override%20character/#_1","text":"\u68c0\u67e5\u5668\uff1artlo \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u9ad8","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Right-to-Left-Override%20character/#_2","text":"\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u4ece\u53f3\u5230\u5de6\u7684\u91cd\u5199\u5b57\u7b26\u6765\u64cd\u7eb5\u5408\u540c\u7684\u903b\u8f91\u3002","title":"\u63cf\u8ff0"},{"location":"Right-to-Left-Override%20character/#_3","text":"contract Token { address payable o; // owner mapping(address => uint) tokens; function withdraw() external returns(uint) { uint amount = tokens[msg.sender]; address payable d = msg.sender; tokens[msg.sender] = 0; _withdraw(/*owner\u202e/*noitanitsed*/ d, o/*\u202d /*value */, amount); } function _withdraw(address payable fee_receiver, address payable destination, uint value) internal { fee_receiver.transfer(1); destination.transfer(value); } } \u5f53 Token \u8c03\u7528 _withdraw \u51fd\u6570\u65f6\uff0c\u4f7f\u7528\u4ece\u53f3\u5230\u5de6\u91cd\u5199\u5b57\u7b26\uff0c\u7ed3\u679c\u5bfc\u81f4\u8d39\u7528\u88ab\u9519\u8bef\u5730\u53d1\u9001\u7ed9msg.sender\uff0c\u5e76\u4e14token\u4f59\u989d\u88ab\u53d1\u9001\u7ed9\u5408\u7ea6\u62e5\u6709\u8005\u3002","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Right-to-Left-Override%20character/#_4","text":"\u5bf9\u5b57\u7b26\u7684\u7279\u6b8a\u64cd\u4f5c\u662f\u4e0d\u5141\u8bb8\u7684","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"State%20variable%20shadowing%20from%20abstract%20contracts/","text":"State variable shadowing from abstract contracts \u57fa\u672c\u60c5\u51b5 Check: shadowing-abstract Severity: Medium Confidence: High \u63cf\u8ff0 Detection of state variables shadowed from abstract contracts. \u5229\u7528\u6848\u4f8b contract BaseContract{ address owner; } contract DerivedContract is BaseContract{ address owner; } owner of BaseContract is shadowed in DerivedContract. \u63a8\u8350\u65b9\u5f0f Remove the state variable shadowing.","title":"State variable shadowing from abstract contracts"},{"location":"State%20variable%20shadowing%20from%20abstract%20contracts/#state-variable-shadowing-from-abstract-contracts","text":"","title":"State variable shadowing from abstract contracts"},{"location":"State%20variable%20shadowing%20from%20abstract%20contracts/#_1","text":"Check: shadowing-abstract Severity: Medium Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"State%20variable%20shadowing%20from%20abstract%20contracts/#_2","text":"Detection of state variables shadowed from abstract contracts.","title":"\u63cf\u8ff0"},{"location":"State%20variable%20shadowing%20from%20abstract%20contracts/#_3","text":"contract BaseContract{ address owner; } contract DerivedContract is BaseContract{ address owner; } owner of BaseContract is shadowed in DerivedContract.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"State%20variable%20shadowing%20from%20abstract%20contracts/#_4","text":"Remove the state variable shadowing.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"State%20variable%20shadowing/","text":"State variable shadowing \u57fa\u672c\u60c5\u51b5 \u68c0\u67e5\u5668\uff1ashadowing-state \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u9ad8 \u63cf\u8ff0 \u68c0\u67e5\u662f\u5426\u5b58\u5728\u5f71\u5b50\u53d8\u91cf \u5229\u7528\u6848\u4f8b contract BaseContract{ address owner; modifier isOwner(){ require(owner == msg.sender); _; } } contract DerivedContract is BaseContract{ address owner; constructor(){ owner = msg.sender; } function withdraw() isOwner() external{ msg.sender.transfer(this.balance); } } owner\u7684baseContract\u4e0d\u4f1a\u88ab\u5206\u914d\uff0c\u7528\u4e8e\u4fee\u6539\u7684isOwner\u4e5f\u4e0d\u4f1a\u5de5\u4f5c\u3002 \u63a8\u8350\u65b9\u5f0f \u79fb\u9664\u5f71\u5b50\u53d8\u91cf","title":"State variable shadowing"},{"location":"State%20variable%20shadowing/#state-variable-shadowing","text":"","title":"State variable shadowing"},{"location":"State%20variable%20shadowing/#_1","text":"\u68c0\u67e5\u5668\uff1ashadowing-state \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u9ad8","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"State%20variable%20shadowing/#_2","text":"\u68c0\u67e5\u662f\u5426\u5b58\u5728\u5f71\u5b50\u53d8\u91cf","title":"\u63cf\u8ff0"},{"location":"State%20variable%20shadowing/#_3","text":"contract BaseContract{ address owner; modifier isOwner(){ require(owner == msg.sender); _; } } contract DerivedContract is BaseContract{ address owner; constructor(){ owner = msg.sender; } function withdraw() isOwner() external{ msg.sender.transfer(this.balance); } } owner\u7684baseContract\u4e0d\u4f1a\u88ab\u5206\u914d\uff0c\u7528\u4e8e\u4fee\u6539\u7684isOwner\u4e5f\u4e0d\u4f1a\u5de5\u4f5c\u3002","title":"\u5229\u7528\u6848\u4f8b"},{"location":"State%20variable%20shadowing/#_4","text":"\u79fb\u9664\u5f71\u5b50\u53d8\u91cf","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"State%20variables%20that%20could%20be%20declared%20constant/","text":"State variables that could be declared constant \u57fa\u672c\u60c5\u51b5 Check: constable-states Severity: Optimization Confidence: High \u63cf\u8ff0 Constant state variables should be declared constant to save gas. \u63a8\u8350\u65b9\u5f0f Add the constant attributes to state variables that never change.","title":"State variables that could be declared constant"},{"location":"State%20variables%20that%20could%20be%20declared%20constant/#state-variables-that-could-be-declared-constant","text":"","title":"State variables that could be declared constant"},{"location":"State%20variables%20that%20could%20be%20declared%20constant/#_1","text":"Check: constable-states Severity: Optimization Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"State%20variables%20that%20could%20be%20declared%20constant/#_2","text":"Constant state variables should be declared constant to save gas.","title":"\u63cf\u8ff0"},{"location":"State%20variables%20that%20could%20be%20declared%20constant/#_3","text":"Add the constant attributes to state variables that never change.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Storage%20Signed%20Integer%20Array/","text":"Storage Signed Integer Array \u57fa\u672c\u60c5\u51b5 \u68c0\u67e5\u5668\uff1astorage-array \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u4e2d \u63cf\u8ff0 \u5728\u7248\u672c0.4.7-0.5.10\u7684solc\u5305\u542b\u7f16\u8bd1\u5668bug\uff0c\u4f1a\u5bfc\u81f4\u5e26\u7b26\u53f7\u6574\u6570\u6570\u7ec4\u7684\u4e0d\u6b63\u786e\u7684\u503c\u3002 \u5229\u7528\u6848\u4f8b contract A { int[3] ether_balances; // storage signed integer array function bad0() private { // ... ether_balances = [-1, -1, -1]; // ... } } bad0()\u4f7f\u7528\u4e86storage-allocated\u5e26\u7b26\u53f7\u6570\u7ec4\u50a8\u5b58\u4e09\u4e2aether_balances\u503c\u3002 -1\u88ab\u8ba4\u4e3a\u662f\u672a\u521d\u59cb\u5316\u503c\uff0c\u7136\u800cSolidity\u7684bug\u4f1a\u4f7f\u5f97\u4ed6\u4eec\u4e3a1\uff0c\u8fd9\u53ef\u80fd\u4f1a\u88ab\u67d0\u4e9b\u8d26\u6237\u5229\u7528\u3002 \u63a8\u8350\u65b9\u5f0f \u4f7f\u7528\u5927\u4e8e0.5.10\u7248\u672c\u7684\u7f16\u8bd1\u5668","title":"Storage Signed Integer Array"},{"location":"Storage%20Signed%20Integer%20Array/#storage-signed-integer-array","text":"","title":"Storage Signed Integer Array"},{"location":"Storage%20Signed%20Integer%20Array/#_1","text":"\u68c0\u67e5\u5668\uff1astorage-array \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u4e2d","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Storage%20Signed%20Integer%20Array/#_2","text":"\u5728\u7248\u672c0.4.7-0.5.10\u7684solc\u5305\u542b\u7f16\u8bd1\u5668bug\uff0c\u4f1a\u5bfc\u81f4\u5e26\u7b26\u53f7\u6574\u6570\u6570\u7ec4\u7684\u4e0d\u6b63\u786e\u7684\u503c\u3002","title":"\u63cf\u8ff0"},{"location":"Storage%20Signed%20Integer%20Array/#_3","text":"contract A { int[3] ether_balances; // storage signed integer array function bad0() private { // ... ether_balances = [-1, -1, -1]; // ... } } bad0()\u4f7f\u7528\u4e86storage-allocated\u5e26\u7b26\u53f7\u6570\u7ec4\u50a8\u5b58\u4e09\u4e2aether_balances\u503c\u3002 -1\u88ab\u8ba4\u4e3a\u662f\u672a\u521d\u59cb\u5316\u503c\uff0c\u7136\u800cSolidity\u7684bug\u4f1a\u4f7f\u5f97\u4ed6\u4eec\u4e3a1\uff0c\u8fd9\u53ef\u80fd\u4f1a\u88ab\u67d0\u4e9b\u8d26\u6237\u5229\u7528\u3002","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Storage%20Signed%20Integer%20Array/#_4","text":"\u4f7f\u7528\u5927\u4e8e0.5.10\u7248\u672c\u7684\u7f16\u8bd1\u5668","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Storage-ABIEncoderV2-Array/","text":"Storage ABIEncoderV2 Array \u57fa\u672c\u60c5\u51b5 \u68c0\u67e5\u5668\uff1aabiencodev2-array \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u9ad8 \u63cf\u8ff0 solc\u7248\u672c\u57280.4.7-0.5.10\u4e2d\u5b58\u5728\u7f16\u8bd1bug\uff0c\u5bfc\u81f4\u9519\u8bef\u7684ABI encoder\u4f7f\u7528\u3002 \u5229\u7528\u6848\u4f8b contract A { uint[2][3] bad_arr = [[1, 2], [3, 4], [5, 6]]; /* Array of arrays passed to abi.encode is vulnerable */ function bad() public { bytes memory b = abi.encode(bad_arr); } } \u5728bad()\u51fd\u6570\u4e2d\u8c03\u7528abi.encode(bad_arr)\u4f1a\u5bfc\u81f4\u9519\u8bef\u7684\u7f16\u7801\u5f62\u5982[[1, 2], [2, 3], [3, 4]]\u7684\u6570\u7ec4\u5e76\u4ea7\u751f\u4e0d\u53ef\u9884\u6d4b\u7684\u884c\u4e3a\u3002 \u63a8\u8350\u65b9\u5f0f \u4f7f\u7528\u5927\u4e8e0.5.10\u7248\u672c\u7684\u7f16\u8bd1\u5668","title":"Storage ABIEncoderV2 Array"},{"location":"Storage-ABIEncoderV2-Array/#storage-abiencoderv2-array","text":"","title":"Storage ABIEncoderV2 Array"},{"location":"Storage-ABIEncoderV2-Array/#_1","text":"\u68c0\u67e5\u5668\uff1aabiencodev2-array \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u9ad8","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Storage-ABIEncoderV2-Array/#_2","text":"solc\u7248\u672c\u57280.4.7-0.5.10\u4e2d\u5b58\u5728\u7f16\u8bd1bug\uff0c\u5bfc\u81f4\u9519\u8bef\u7684ABI encoder\u4f7f\u7528\u3002","title":"\u63cf\u8ff0"},{"location":"Storage-ABIEncoderV2-Array/#_3","text":"contract A { uint[2][3] bad_arr = [[1, 2], [3, 4], [5, 6]]; /* Array of arrays passed to abi.encode is vulnerable */ function bad() public { bytes memory b = abi.encode(bad_arr); } } \u5728bad()\u51fd\u6570\u4e2d\u8c03\u7528abi.encode(bad_arr)\u4f1a\u5bfc\u81f4\u9519\u8bef\u7684\u7f16\u7801\u5f62\u5982[[1, 2], [2, 3], [3, 4]]\u7684\u6570\u7ec4\u5e76\u4ea7\u751f\u4e0d\u53ef\u9884\u6d4b\u7684\u884c\u4e3a\u3002","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Storage-ABIEncoderV2-Array/#_4","text":"\u4f7f\u7528\u5927\u4e8e0.5.10\u7248\u672c\u7684\u7f16\u8bd1\u5668","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Suicidal/","text":"Suicidal \u57fa\u672c\u60c5\u51b5 \u68c0\u67e5\u5668\uff1asuicidal \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u9ad8 \u63cf\u8ff0 \u5bf9\u4e00\u4e2a\u51fd\u6570\u8fdb\u884c\u65e0\u4fdd\u62a4\u7684\u8c03\u7528\u5c06\u4f1a\u51fa\u53d1\u81ea\u6bc1\u673a\u5236 \u5229\u7528\u6848\u4f8b contract Suicidal{ function kill() public{ selfdestruct(msg.sender); } } bob\u53ef\u4ee5\u8c03\u7528kill\u51fd\u6570\u6765\u6bc1\u6389\u5408\u7ea6 \u63a8\u8350\u65b9\u5f0f \u5bf9\u6240\u6709\u654f\u611f\u51fd\u6570\u7684\u8bbf\u95ee\u90fd\u5e94\u8be5\u8fdb\u884c\u4fdd\u62a4","title":"Suicidal"},{"location":"Suicidal/#suicidal","text":"","title":"Suicidal"},{"location":"Suicidal/#_1","text":"\u68c0\u67e5\u5668\uff1asuicidal \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u9ad8","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Suicidal/#_2","text":"\u5bf9\u4e00\u4e2a\u51fd\u6570\u8fdb\u884c\u65e0\u4fdd\u62a4\u7684\u8c03\u7528\u5c06\u4f1a\u51fa\u53d1\u81ea\u6bc1\u673a\u5236","title":"\u63cf\u8ff0"},{"location":"Suicidal/#_3","text":"contract Suicidal{ function kill() public{ selfdestruct(msg.sender); } } bob\u53ef\u4ee5\u8c03\u7528kill\u51fd\u6570\u6765\u6bc1\u6389\u5408\u7ea6","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Suicidal/#_4","text":"\u5bf9\u6240\u6709\u654f\u611f\u51fd\u6570\u7684\u8bbf\u95ee\u90fd\u5e94\u8be5\u8fdb\u884c\u4fdd\u62a4","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Tautology%20or%20contradiction/","text":"Tautology or contradiction \u57fa\u672c\u60c5\u51b5 Check: tautology Severity: Medium Confidence: High \u63cf\u8ff0 Detects expressions that are tautologies or contradictions. \u5229\u7528\u6848\u4f8b contract A { function f(uint x) public { // ... if (x >= 0) { // bad -- always true // ... } // ... } function g(uint8 y) public returns (bool) { // ... return (y < 512); // bad! // ... } } x is a uint256, so x >= 0 will be always true. y is a uint8, so y <512 will be always true. \u63a8\u8350\u65b9\u5f0f Fix the incorrect comparison by changing the value type or the comparison.","title":"Tautology or contradiction"},{"location":"Tautology%20or%20contradiction/#tautology-or-contradiction","text":"","title":"Tautology or contradiction"},{"location":"Tautology%20or%20contradiction/#_1","text":"Check: tautology Severity: Medium Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Tautology%20or%20contradiction/#_2","text":"Detects expressions that are tautologies or contradictions.","title":"\u63cf\u8ff0"},{"location":"Tautology%20or%20contradiction/#_3","text":"contract A { function f(uint x) public { // ... if (x >= 0) { // bad -- always true // ... } // ... } function g(uint8 y) public returns (bool) { // ... return (y < 512); // bad! // ... } } x is a uint256, so x >= 0 will be always true. y is a uint8, so y <512 will be always true.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Tautology%20or%20contradiction/#_4","text":"Fix the incorrect comparison by changing the value type or the comparison.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Too%20many%20digits/","text":"Too many digits \u57fa\u672c\u60c5\u51b5 Check: too-many-digits Severity: Informational Confidence: Medium \u63cf\u8ff0 Literals with many digits are difficult to read and review. \u5229\u7528\u6848\u4f8b contract MyContract{ uint 1_ether = 10000000000000000000; } While 1_ether looks like 1 ether, it is 10 ether. As a result, it's likely to be used incorrectly. \u63a8\u8350\u65b9\u5f0f Use: Ether suffix, Time suffix, or The scientific notation","title":"Too many digits"},{"location":"Too%20many%20digits/#too-many-digits","text":"","title":"Too many digits"},{"location":"Too%20many%20digits/#_1","text":"Check: too-many-digits Severity: Informational Confidence: Medium","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Too%20many%20digits/#_2","text":"Literals with many digits are difficult to read and review.","title":"\u63cf\u8ff0"},{"location":"Too%20many%20digits/#_3","text":"contract MyContract{ uint 1_ether = 10000000000000000000; } While 1_ether looks like 1 ether, it is 10 ether. As a result, it's likely to be used incorrectly.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Too%20many%20digits/#_4","text":"Use: Ether suffix, Time suffix, or The scientific notation","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Unchecked%20Send/","text":"Unchecked Send \u57fa\u672c\u60c5\u51b5 Check: unchecked-send Severity: Medium Confidence: Medium \u63cf\u8ff0 The return value of a send is not checked. \u5229\u7528\u6848\u4f8b contract MyConc{ function my_func(address payable dst) public payable{ dst.send(msg.value); } } The return value of send is not checked, so if the send fails, the Ether will be locked in the contract. If send is used to prevent blocking operations, consider logging the failed send. \u63a8\u8350\u65b9\u5f0f Ensure that the return value of send is checked or logged.","title":"Unchecked Send"},{"location":"Unchecked%20Send/#unchecked-send","text":"","title":"Unchecked Send"},{"location":"Unchecked%20Send/#_1","text":"Check: unchecked-send Severity: Medium Confidence: Medium","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Unchecked%20Send/#_2","text":"The return value of a send is not checked.","title":"\u63cf\u8ff0"},{"location":"Unchecked%20Send/#_3","text":"contract MyConc{ function my_func(address payable dst) public payable{ dst.send(msg.value); } } The return value of send is not checked, so if the send fails, the Ether will be locked in the contract. If send is used to prevent blocking operations, consider logging the failed send.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Unchecked%20Send/#_4","text":"Ensure that the return value of send is checked or logged.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Unchecked%20low-level%20calls/","text":"Unchecked low-level calls \u57fa\u672c\u60c5\u51b5 Check: unchecked-lowlevel Severity: Medium Confidence: Medium \u63cf\u8ff0 The return value of a low-level call is not checked. \u5229\u7528\u6848\u4f8b contract MyConc{ function my_func(address payable dst) public payable{ dst.call.value(msg.value)(\"\"); } } The return value of the low-level call is not checked, so if the call fails, the Ether will be locked in the contract. If the low level is used to prevent blocking operations, consider logging failed calls. \u63a8\u8350\u65b9\u5f0f Ensure that the return value of a low-level call is checked or logged.","title":"Unchecked low-level calls"},{"location":"Unchecked%20low-level%20calls/#unchecked-low-level-calls","text":"","title":"Unchecked low-level calls"},{"location":"Unchecked%20low-level%20calls/#_1","text":"Check: unchecked-lowlevel Severity: Medium Confidence: Medium","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Unchecked%20low-level%20calls/#_2","text":"The return value of a low-level call is not checked.","title":"\u63cf\u8ff0"},{"location":"Unchecked%20low-level%20calls/#_3","text":"contract MyConc{ function my_func(address payable dst) public payable{ dst.call.value(msg.value)(\"\"); } } The return value of the low-level call is not checked, so if the call fails, the Ether will be locked in the contract. If the low level is used to prevent blocking operations, consider logging failed calls.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Unchecked%20low-level%20calls/#_4","text":"Ensure that the return value of a low-level call is checked or logged.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Unchecked%20transfer/","text":"Unchecked transfer \u57fa\u672c\u60c5\u51b5 \u68c0\u67e5\u5668\uff1aunchecked-transfer \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u4e2d \u63cf\u8ff0 \u68c0\u6d4b\u6ca1\u88ab\u68c0\u67e5\u8fc7\u7684\u5916\u90e8\u8c03\u7528\u7684\u8fd4\u56de\u503c \u5229\u7528\u6848\u4f8b contract Token { function transferFrom(address _from, address _to, uint256 _value) public returns (bool success); } contract MyBank{ mapping(address => uint) balances; Token token; function deposit(uint amount) public{ token.transferFrom(msg.sender, address(this), amount); balances[msg.sender] += amount; } } \u6709\u51e0\u4e2a\u4ee3\u5e01\u5728\u5931\u8d25\u7684\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u6062\u590d\uff0c\u800c\u662f\u8fd4\u56de\u9519\u8bef\u3002\u5982\u679c\u5728MyBank\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u4ee3\u5e01\u4e4b\u4e00\uff0c\u5982\u679c\u8f6c\u8d26\u5931\u8d25\uff0c\u5b58\u6b3e\u5c06\u4e0d\u4f1a\u6062\u590d\uff0c\u800c\u653b\u51fb\u8005\u53ef\u4ee5\u514d\u8d39\u8c03\u7528\u5b58\u6b3e\u3002 \u63a8\u8350\u65b9\u5f0f \u4f7f\u7528SafeERC20\uff0c\u6216\u8005\u786e\u4fdd\u5916\u90e8\u8c03\u7528\u7684\u8fd4\u56de\u503c\u88ab\u68c0\u67e5\u3002","title":"Unchecked transfer"},{"location":"Unchecked%20transfer/#unchecked-transfer","text":"","title":"Unchecked transfer"},{"location":"Unchecked%20transfer/#_1","text":"\u68c0\u67e5\u5668\uff1aunchecked-transfer \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u4e2d","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Unchecked%20transfer/#_2","text":"\u68c0\u6d4b\u6ca1\u88ab\u68c0\u67e5\u8fc7\u7684\u5916\u90e8\u8c03\u7528\u7684\u8fd4\u56de\u503c","title":"\u63cf\u8ff0"},{"location":"Unchecked%20transfer/#_3","text":"contract Token { function transferFrom(address _from, address _to, uint256 _value) public returns (bool success); } contract MyBank{ mapping(address => uint) balances; Token token; function deposit(uint amount) public{ token.transferFrom(msg.sender, address(this), amount); balances[msg.sender] += amount; } } \u6709\u51e0\u4e2a\u4ee3\u5e01\u5728\u5931\u8d25\u7684\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u6062\u590d\uff0c\u800c\u662f\u8fd4\u56de\u9519\u8bef\u3002\u5982\u679c\u5728MyBank\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u4ee3\u5e01\u4e4b\u4e00\uff0c\u5982\u679c\u8f6c\u8d26\u5931\u8d25\uff0c\u5b58\u6b3e\u5c06\u4e0d\u4f1a\u6062\u590d\uff0c\u800c\u653b\u51fb\u8005\u53ef\u4ee5\u514d\u8d39\u8c03\u7528\u5b58\u6b3e\u3002","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Unchecked%20transfer/#_4","text":"\u4f7f\u7528SafeERC20\uff0c\u6216\u8005\u786e\u4fdd\u5916\u90e8\u8c03\u7528\u7684\u8fd4\u56de\u503c\u88ab\u68c0\u67e5\u3002","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Unimplemented%20functions/","text":"Unimplemented functions \u57fa\u672c\u60c5\u51b5 Check: unimplemented-functions Severity: Informational Confidence: High \u63cf\u8ff0 Detect functions that are not implemented on derived-most contracts. \u5229\u7528\u6848\u4f8b interface BaseInterface { function f1() external returns(uint); function f2() external returns(uint); } interface BaseInterface2 { function f3() external returns(uint); } contract DerivedContract is BaseInterface, BaseInterface2 { function f1() external returns(uint){ return 42; } } DerivedContract does not implement BaseInterface.f2 or BaseInterface2.f3. As a result, the contract will not properly compile. All unimplemented functions must be implemented on a contract that is meant to be used. \u63a8\u8350\u65b9\u5f0f Implement all unimplemented functions in any contract you intend to use directly (not simply inherit from).","title":"Unimplemented functions"},{"location":"Unimplemented%20functions/#unimplemented-functions","text":"","title":"Unimplemented functions"},{"location":"Unimplemented%20functions/#_1","text":"Check: unimplemented-functions Severity: Informational Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Unimplemented%20functions/#_2","text":"Detect functions that are not implemented on derived-most contracts.","title":"\u63cf\u8ff0"},{"location":"Unimplemented%20functions/#_3","text":"interface BaseInterface { function f1() external returns(uint); function f2() external returns(uint); } interface BaseInterface2 { function f3() external returns(uint); } contract DerivedContract is BaseInterface, BaseInterface2 { function f1() external returns(uint){ return 42; } } DerivedContract does not implement BaseInterface.f2 or BaseInterface2.f3. As a result, the contract will not properly compile. All unimplemented functions must be implemented on a contract that is meant to be used.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Unimplemented%20functions/#_4","text":"Implement all unimplemented functions in any contract you intend to use directly (not simply inherit from).","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Unindexed%20ERC20%20event%20oarameters/","text":"Unindexed ERC20 event oarameters \u57fa\u672c\u60c5\u51b5 Check: erc20-indexed Severity: Informational Confidence: High \u63cf\u8ff0 Detects whether events defined by the ERC20 specification that should have some parameters as indexed are missing the indexed keyword. \u5229\u7528\u6848\u4f8b contract ERC20Bad { // ... event Transfer(address from, address to, uint value); event Approval(address owner, address spender, uint value); // ... } Transfer and Approval events should have the 'indexed' keyword on their two first parameters, as defined by the ERC20 specification. Failure to include these keywords will exclude the parameter data in the transaction/block's bloom filter, so external tooling searching for these parameters may overlook them and fail to index logs from this token contract. \u63a8\u8350\u65b9\u5f0f Add the indexed keyword to event parameters that should include it, according to the ERC20 specification.","title":"Unindexed ERC20 event oarameters"},{"location":"Unindexed%20ERC20%20event%20oarameters/#unindexed-erc20-event-oarameters","text":"","title":"Unindexed ERC20 event oarameters"},{"location":"Unindexed%20ERC20%20event%20oarameters/#_1","text":"Check: erc20-indexed Severity: Informational Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Unindexed%20ERC20%20event%20oarameters/#_2","text":"Detects whether events defined by the ERC20 specification that should have some parameters as indexed are missing the indexed keyword.","title":"\u63cf\u8ff0"},{"location":"Unindexed%20ERC20%20event%20oarameters/#_3","text":"contract ERC20Bad { // ... event Transfer(address from, address to, uint value); event Approval(address owner, address spender, uint value); // ... } Transfer and Approval events should have the 'indexed' keyword on their two first parameters, as defined by the ERC20 specification. Failure to include these keywords will exclude the parameter data in the transaction/block's bloom filter, so external tooling searching for these parameters may overlook them and fail to index logs from this token contract.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Unindexed%20ERC20%20event%20oarameters/#_4","text":"Add the indexed keyword to event parameters that should include it, according to the ERC20 specification.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Uninitialized%20function%20pointers%20in%20constructors/","text":"Uninitialized function pointers in constructors \u57fa\u672c\u60c5\u51b5 Check: uninitialized-fptr-cst Severity: Low Confidence: High \u63cf\u8ff0 solc versions 0.4.5-0.4.26 and 0.5.0-0.5.8 contain a compiler bug leading to unexpected behavior when calling uninitialized function pointers in constructors. \u5229\u7528\u6848\u4f8b contract bad0 { constructor() public { /* Uninitialized function pointer */ function(uint256) internal returns(uint256) a; a(10); } } The call to a(10) will lead to unexpected behavior because function pointer a is not initialized in the constructor. \u63a8\u8350\u65b9\u5f0f Initialize function pointers before calling. Avoid function pointers if possible.","title":"Uninitialized function pointers in constructors"},{"location":"Uninitialized%20function%20pointers%20in%20constructors/#uninitialized-function-pointers-in-constructors","text":"","title":"Uninitialized function pointers in constructors"},{"location":"Uninitialized%20function%20pointers%20in%20constructors/#_1","text":"Check: uninitialized-fptr-cst Severity: Low Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Uninitialized%20function%20pointers%20in%20constructors/#_2","text":"solc versions 0.4.5-0.4.26 and 0.5.0-0.5.8 contain a compiler bug leading to unexpected behavior when calling uninitialized function pointers in constructors.","title":"\u63cf\u8ff0"},{"location":"Uninitialized%20function%20pointers%20in%20constructors/#_3","text":"contract bad0 { constructor() public { /* Uninitialized function pointer */ function(uint256) internal returns(uint256) a; a(10); } } The call to a(10) will lead to unexpected behavior because function pointer a is not initialized in the constructor.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Uninitialized%20function%20pointers%20in%20constructors/#_4","text":"Initialize function pointers before calling. Avoid function pointers if possible.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Uninitialized%20local%20variables/","text":"Uninitialized local variables \u57fa\u672c\u60c5\u51b5 Check: uninitialized-local Severity: Medium Confidence: Medium \u63cf\u8ff0 Uninitialized local variables. \u5229\u7528\u6848\u4f8b contract Uninitialized is Owner{ function withdraw() payable public onlyOwner{ address to; to.transfer(this.balance) } } Bob calls transfer. As a result, all Ether is sent to the address 0x0 and is lost. \u63a8\u8350\u65b9\u5f0f Initialize all the variables. If a variable is meant to be initialized to zero, explicitly set it to zero to improve code readability.","title":"Uninitialized local variables"},{"location":"Uninitialized%20local%20variables/#uninitialized-local-variables","text":"","title":"Uninitialized local variables"},{"location":"Uninitialized%20local%20variables/#_1","text":"Check: uninitialized-local Severity: Medium Confidence: Medium","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Uninitialized%20local%20variables/#_2","text":"Uninitialized local variables.","title":"\u63cf\u8ff0"},{"location":"Uninitialized%20local%20variables/#_3","text":"contract Uninitialized is Owner{ function withdraw() payable public onlyOwner{ address to; to.transfer(this.balance) } } Bob calls transfer. As a result, all Ether is sent to the address 0x0 and is lost.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Uninitialized%20local%20variables/#_4","text":"Initialize all the variables. If a variable is meant to be initialized to zero, explicitly set it to zero to improve code readability.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Uninitialized%20state%20variables/","text":"Uninitialized state variables \u57fa\u672c\u60c5\u51b5 \u68c0\u67e5\u5668\uff1auninitialized-state \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u9ad8 \u63cf\u8ff0 \u68c0\u67e5\u672a\u521d\u59cb\u5316\u7684\u53d8\u91cf \u5229\u7528\u6848\u4f8b contract Uninitialized{ address destination; function transfer() payable public{ destination.transfer(msg.value); } } bob\u8c03\u7528transfer\u51fd\u6570\uff0c\u7ed3\u679c\u5bfc\u81f4\u4ee5\u592a\u5e01\u88ab\u53d1\u9001\u5230\u5730\u57400x0\u4ece\u800c\u4e22\u5931 \u63a8\u8350\u65b9\u5f0f \u521d\u59cb\u5316\u6240\u6709\u7684\u53d8\u91cf\uff0c\u5982\u679c\u60f3\u628a\u4e00\u4e2a\u53d8\u91cf\u521d\u59cb\u5316\u4e3a\u96f6\uff0c\u5c31\u8981\u660e\u786e\u7684\u5c06\u5b83\u7684\u503c\u8bbe\u7f6e\u4e3a\u96f6\u53bb\u63d0\u5347\u4ee3\u7801\u7684\u53ef\u8bfb\u6027","title":"Uninitialized state variables"},{"location":"Uninitialized%20state%20variables/#uninitialized-state-variables","text":"","title":"Uninitialized state variables"},{"location":"Uninitialized%20state%20variables/#_1","text":"\u68c0\u67e5\u5668\uff1auninitialized-state \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u9ad8","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Uninitialized%20state%20variables/#_2","text":"\u68c0\u67e5\u672a\u521d\u59cb\u5316\u7684\u53d8\u91cf","title":"\u63cf\u8ff0"},{"location":"Uninitialized%20state%20variables/#_3","text":"contract Uninitialized{ address destination; function transfer() payable public{ destination.transfer(msg.value); } } bob\u8c03\u7528transfer\u51fd\u6570\uff0c\u7ed3\u679c\u5bfc\u81f4\u4ee5\u592a\u5e01\u88ab\u53d1\u9001\u5230\u5730\u57400x0\u4ece\u800c\u4e22\u5931","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Uninitialized%20state%20variables/#_4","text":"\u521d\u59cb\u5316\u6240\u6709\u7684\u53d8\u91cf\uff0c\u5982\u679c\u60f3\u628a\u4e00\u4e2a\u53d8\u91cf\u521d\u59cb\u5316\u4e3a\u96f6\uff0c\u5c31\u8981\u660e\u786e\u7684\u5c06\u5b83\u7684\u503c\u8bbe\u7f6e\u4e3a\u96f6\u53bb\u63d0\u5347\u4ee3\u7801\u7684\u53ef\u8bfb\u6027","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Uninitialized%20storage%20variables/","text":"Uninitialized storage variables \u57fa\u672c\u60c5\u51b5 \u68c0\u67e5\u5668\uff1auninitialized-storage \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u9ad8 \u63cf\u8ff0 \u4e00\u4e2a\u672a\u521d\u59cb\u5316\u7684\u5b58\u50a8\u53d8\u91cf\u4f1a\u88ab\u89c6\u4e3a\u7b2c\u4e00\u4e2a\u72b6\u6001\u53d8\u91cf\u7684\u5f15\u7528\uff0c\u5e76\u80fd\u91cd\u5199\u5173\u952e\u7684\u53d8\u91cf \u5229\u7528\u6848\u4f8b contract Uninitialized{ address owner = msg.sender; struct St{ uint a; } function func() { St st; st.a = 0x0; } } bob\u8c03\u7528func\uff0c\u7ed3\u679c\u5bfc\u81f4owner\u88ab\u91cd\u5199\u4e3a0\u3002 \u63a8\u8350\u65b9\u5f0f \u521d\u59cb\u5316\u6240\u6709\u7684\u5b58\u50a8\u53d8\u91cf","title":"Uninitialized storage variables"},{"location":"Uninitialized%20storage%20variables/#uninitialized-storage-variables","text":"","title":"Uninitialized storage variables"},{"location":"Uninitialized%20storage%20variables/#_1","text":"\u68c0\u67e5\u5668\uff1auninitialized-storage \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u9ad8","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Uninitialized%20storage%20variables/#_2","text":"\u4e00\u4e2a\u672a\u521d\u59cb\u5316\u7684\u5b58\u50a8\u53d8\u91cf\u4f1a\u88ab\u89c6\u4e3a\u7b2c\u4e00\u4e2a\u72b6\u6001\u53d8\u91cf\u7684\u5f15\u7528\uff0c\u5e76\u80fd\u91cd\u5199\u5173\u952e\u7684\u53d8\u91cf","title":"\u63cf\u8ff0"},{"location":"Uninitialized%20storage%20variables/#_3","text":"contract Uninitialized{ address owner = msg.sender; struct St{ uint a; } function func() { St st; st.a = 0x0; } } bob\u8c03\u7528func\uff0c\u7ed3\u679c\u5bfc\u81f4owner\u88ab\u91cd\u5199\u4e3a0\u3002","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Uninitialized%20storage%20variables/#_4","text":"\u521d\u59cb\u5316\u6240\u6709\u7684\u5b58\u50a8\u53d8\u91cf","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Unprotected%20upgradeable%20contract/","text":"Unprotected upgradeable contract \u57fa\u672c\u60c5\u51b5 \u68c0\u67e5\u5668\uff1aunprotected-upgrade \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u9ad8 \u63cf\u8ff0 \u68c0\u67e5\u53ef\u4ee5\u88ab\u6bc1\u6389\u7684\u903b\u8f91\u5408\u540c \u5229\u7528\u6848\u4f8b contract Buggy is Initializable{ address payable owner; function initialize() external initializer{ require(owner == address(0)); owner = msg.sender; } function kill() external{ require(msg.sender == owner); selfdestruct(owner); } } buggy\u662f\u4e00\u4e2a\u53ef\u4ee5\u88ab\u66f4\u65b0\u7684\u5408\u7ea6\uff0c\u4efb\u4f55\u4eba\u90fd\u80fd\u8c03\u7528\u5408\u7ea6\u7684initialize\u51fd\u6570\u5e76\u6bc1\u6389\u5408\u7ea6 \u63a8\u8350\u65b9\u5f0f \u6dfb\u52a0\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u53bb\u786e\u4fddinitialize\u51fd\u6570\u4e0d\u80fd\u5728\u903b\u8f91\u5408\u540c\u4e0a\u88ab\u8c03\u7528","title":"Unprotected upgradeable contract"},{"location":"Unprotected%20upgradeable%20contract/#unprotected-upgradeable-contract","text":"","title":"Unprotected upgradeable contract"},{"location":"Unprotected%20upgradeable%20contract/#_1","text":"\u68c0\u67e5\u5668\uff1aunprotected-upgrade \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u9ad8","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Unprotected%20upgradeable%20contract/#_2","text":"\u68c0\u67e5\u53ef\u4ee5\u88ab\u6bc1\u6389\u7684\u903b\u8f91\u5408\u540c","title":"\u63cf\u8ff0"},{"location":"Unprotected%20upgradeable%20contract/#_3","text":"contract Buggy is Initializable{ address payable owner; function initialize() external initializer{ require(owner == address(0)); owner = msg.sender; } function kill() external{ require(msg.sender == owner); selfdestruct(owner); } } buggy\u662f\u4e00\u4e2a\u53ef\u4ee5\u88ab\u66f4\u65b0\u7684\u5408\u7ea6\uff0c\u4efb\u4f55\u4eba\u90fd\u80fd\u8c03\u7528\u5408\u7ea6\u7684initialize\u51fd\u6570\u5e76\u6bc1\u6389\u5408\u7ea6","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Unprotected%20upgradeable%20contract/#_4","text":"\u6dfb\u52a0\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u53bb\u786e\u4fddinitialize\u51fd\u6570\u4e0d\u80fd\u5728\u903b\u8f91\u5408\u540c\u4e0a\u88ab\u8c03\u7528","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Unused%20return/","text":"Unused return \u57fa\u672c\u60c5\u51b5 Check: unused-return Severity: Medium Confidence: Medium \u63cf\u8ff0 The return value of an external call is not stored in a local or state variable. \u5229\u7528\u6848\u4f8b contract MyConc{ using SafeMath for uint; function my_func(uint a, uint b) public{ a.add(b); } } MyConc calls add of SafeMath, but does not store the result in a. As a result, the computation has no effect. \u63a8\u8350\u65b9\u5f0f Ensure that all the return values of the function calls are used.","title":"Unused return"},{"location":"Unused%20return/#unused-return","text":"","title":"Unused return"},{"location":"Unused%20return/#_1","text":"Check: unused-return Severity: Medium Confidence: Medium","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Unused%20return/#_2","text":"The return value of an external call is not stored in a local or state variable.","title":"\u63cf\u8ff0"},{"location":"Unused%20return/#_3","text":"contract MyConc{ using SafeMath for uint; function my_func(uint a, uint b) public{ a.add(b); } } MyConc calls add of SafeMath, but does not store the result in a. As a result, the computation has no effect.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Unused%20return/#_4","text":"Ensure that all the return values of the function calls are used.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Unused%20state%20variable/","text":"Unused state variable \u57fa\u672c\u60c5\u51b5 Check: unused-state Severity: Informational Confidence: High \u63cf\u8ff0 Unused state variable. \u63a8\u8350\u65b9\u5f0f Remove unused state variables.","title":"Unused state variable"},{"location":"Unused%20state%20variable/#unused-state-variable","text":"","title":"Unused state variable"},{"location":"Unused%20state%20variable/#_1","text":"Check: unused-state Severity: Informational Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Unused%20state%20variable/#_2","text":"Unused state variable.","title":"\u63cf\u8ff0"},{"location":"Unused%20state%20variable/#_3","text":"Remove unused state variables.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Variable%20names%20too%20similar/","text":"Variable names too similar \u57fa\u672c\u60c5\u51b5 Check: similar-names Severity: Informational Confidence: Medium \u63cf\u8ff0 Detect variables with names that are too similar. \u5229\u7528\u6848\u4f8b Bob uses several variables with similar names. As a result, his code is difficult to review. \u63a8\u8350\u65b9\u5f0f Prevent variables from having similar names.","title":"Variable names too similar"},{"location":"Variable%20names%20too%20similar/#variable-names-too-similar","text":"","title":"Variable names too similar"},{"location":"Variable%20names%20too%20similar/#_1","text":"Check: similar-names Severity: Informational Confidence: Medium","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Variable%20names%20too%20similar/#_2","text":"Detect variables with names that are too similar.","title":"\u63cf\u8ff0"},{"location":"Variable%20names%20too%20similar/#_3","text":"Bob uses several variables with similar names. As a result, his code is difficult to review.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Variable%20names%20too%20similar/#_4","text":"Prevent variables from having similar names.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Void%20constructor/","text":"Void constructor \u57fa\u672c\u60c5\u51b5 Check: void-cst Severity: Low Confidence: High \u63cf\u8ff0 Detect the call to a constructor that is not implemented \u5229\u7528\u6848\u4f8b contract A{} contract B is A{ constructor() public A(){} } When reading B's constructor definition, we might assume that A() initiates the contract, but no code is executed. \u63a8\u8350\u65b9\u5f0f Remove the constructor call.","title":"Void constructor"},{"location":"Void%20constructor/#void-constructor","text":"","title":"Void constructor"},{"location":"Void%20constructor/#_1","text":"Check: void-cst Severity: Low Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Void%20constructor/#_2","text":"Detect the call to a constructor that is not implemented","title":"\u63cf\u8ff0"},{"location":"Void%20constructor/#_3","text":"contract A{} contract B is A{ constructor() public A(){} } When reading B's constructor definition, we might assume that A() initiates the contract, but no code is executed.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Void%20constructor/#_4","text":"Remove the constructor call.","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Weak%20PRNG/","text":"Weak PRNG \u57fa\u672c\u60c5\u51b5 \u68c0\u67e5\u5668\uff1aweak-prng \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u4e2d \u63cf\u8ff0 Weak PRNG\u662f\u7531block.timestamp, now \u6216\u8005 blockhash \u6a21\u5757\u6240\u5bfc\u81f4\u7684\u3002\u8fd9\u4e9b\u53ef\u80fd\u4f1a\u5f71\u54cd\u90e8\u5206\u77ff\u5de5\u7684\u53bb\u6267\u884c\u5e94\u5f53\u907f\u514d\u7684\u884c\u4e3a\u3002 \u5229\u7528\u6848\u4f8b contract Game { uint reward_determining_number; function guessing() external{ reward_determining_number = uint256(block.blockhash(10000)) % 10; } } Eve\u662f\u4e00\u540d\u77ff\u5de5\uff0cEve\u8c03\u7528guessing\u51fd\u6570\u5e76\u5bf9\u5757\u5185\u7684\u4ea4\u6613\u4fe1\u606f\u91cd\u6392\u5e8f\uff0c\u4f5c\u4e3a\u7ed3\u679c\uff0cEve\u8d62\u5f97\u4e86\u8fd9\u4e2a\u6392\u5e8f\u3002 \u63a8\u8350\u65b9\u5f0f \u4e0d\u4f7f\u7528block.timestamp, now \u6216\u8005 blockhash \u4f5c\u4e3a\u968f\u673a\u6e90\u3002","title":"Weak PRNG"},{"location":"Weak%20PRNG/#weak-prng","text":"","title":"Weak PRNG"},{"location":"Weak%20PRNG/#_1","text":"\u68c0\u67e5\u5668\uff1aweak-prng \u4e25\u91cd\u7a0b\u5ea6\uff1a\u9ad8 \u68c0\u67e5\u7f6e\u4fe1\u5ea6\uff1a\u4e2d","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Weak%20PRNG/#_2","text":"Weak PRNG\u662f\u7531block.timestamp, now \u6216\u8005 blockhash \u6a21\u5757\u6240\u5bfc\u81f4\u7684\u3002\u8fd9\u4e9b\u53ef\u80fd\u4f1a\u5f71\u54cd\u90e8\u5206\u77ff\u5de5\u7684\u53bb\u6267\u884c\u5e94\u5f53\u907f\u514d\u7684\u884c\u4e3a\u3002","title":"\u63cf\u8ff0"},{"location":"Weak%20PRNG/#_3","text":"contract Game { uint reward_determining_number; function guessing() external{ reward_determining_number = uint256(block.blockhash(10000)) % 10; } } Eve\u662f\u4e00\u540d\u77ff\u5de5\uff0cEve\u8c03\u7528guessing\u51fd\u6570\u5e76\u5bf9\u5757\u5185\u7684\u4ea4\u6613\u4fe1\u606f\u91cd\u6392\u5e8f\uff0c\u4f5c\u4e3a\u7ed3\u679c\uff0cEve\u8d62\u5f97\u4e86\u8fd9\u4e2a\u6392\u5e8f\u3002","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Weak%20PRNG/#_4","text":"\u4e0d\u4f7f\u7528block.timestamp, now \u6216\u8005 blockhash \u4f5c\u4e3a\u968f\u673a\u6e90\u3002","title":"\u63a8\u8350\u65b9\u5f0f"},{"location":"Write%20after%20write/","text":"Write after write \u57fa\u672c\u60c5\u51b5 Check: write-after-write Severity: Medium Confidence: High \u63cf\u8ff0 Detects variables that are written but never read and written again. \u5229\u7528\u6848\u4f8b contract Buggy{ function my_func() external initializer{ // ... a = b; a = c; // .. } } a is first asigned to b , and then to c . As a result the first write does nothing. \u63a8\u8350\u65b9\u5f0f Fix or remove the writes.","title":"Write after write"},{"location":"Write%20after%20write/#write-after-write","text":"","title":"Write after write"},{"location":"Write%20after%20write/#_1","text":"Check: write-after-write Severity: Medium Confidence: High","title":"\u57fa\u672c\u60c5\u51b5"},{"location":"Write%20after%20write/#_2","text":"Detects variables that are written but never read and written again.","title":"\u63cf\u8ff0"},{"location":"Write%20after%20write/#_3","text":"contract Buggy{ function my_func() external initializer{ // ... a = b; a = c; // .. } } a is first asigned to b , and then to c . As a result the first write does nothing.","title":"\u5229\u7528\u6848\u4f8b"},{"location":"Write%20after%20write/#_4","text":"Fix or remove the writes.","title":"\u63a8\u8350\u65b9\u5f0f"}]}