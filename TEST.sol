pragma solidity ^0.4.24;

contract Bank {
    address owner;
    mapping (address => uint256) balances;

    constructor() public payable{ 
        owner = msg.sender; 
    }

    function deposit() public payable { 
        balances[msg.sender] += msg.value;
    }

    function withdraw(address receiver, uint256 amount) public{
        require(balances[msg.sender] > amount);
        require(address(this).balance > amount);
        // **使用 call.value()()进行ether转币时，没有Gas限制，用call调用会触发attack的fallback函数**
        //receiver.call.value(amount)();
        receiver.send(amount);
        balances[msg.sender] -= amount;
    }

    function balanceOf(address addr) public view returns (uint256) { 
        return balances[addr]; 
    }
    
    function getBank() public view returns(uint){
        return address(this).balance;
    } 
}

