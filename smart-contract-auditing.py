import argparse
from slither.slither import Slither
import os
import contractIR
import pdfkit

def parsearg():
    parser = argparse.ArgumentParser()
    parser.description = "Please enter parameters f, d, p"
    parser.add_argument("-f", "--file", help= "this is the path of file would like to audit", dest="argF")
    parser.add_argument("-p", "--printer", help="this is the printer", dest="argP", action="count")
    parser.add_argument("-o", "--out", help="output file", dest="argO")
    args = parser.parse_args()
    return args

if __name__ == '__main__':
    curpath = os.getcwd()
    args = parsearg()
    filepath = args.argF
    dtxt = "<h1>" + str(filepath) + " vulnerability auditing report</h1>"

    if args.argF is not None:
        if args.argP != 0:
            dtxt += "<br/><h2>Brief Information</h2>"
            os.system("slither " + filepath + " --print contract-summary")
            pf = open("printer.log")
            dtxt += "<h3>contract-summary</h3>"
            for line in pf.readlines():
                if line.startswith("\n"):
                    continue
                dtxt += line
                dtxt += "<br/>"
            os.system("slither " + filepath + " --print function-summary")
            os.system("slither " + filepath + " --print call-graph")
            os.system("slither " + filepath + " --print inheritance-graph")
            os.system("dot -Tpng -o TEST1.png " + filepath + ".all_contracts.call-graph.dot")
            os.system("dot -Tpng -o TEST2.png " + filepath + ".inheritance-graph.dot")
            dtxt += "<br/><h3>function-summary</h3>"
            for line in pf.readlines():
                if line.startswith("\n") or line.startswith("Call Graph") or line.startswith("Inheritance Graph"):
                    continue
                dtxt += line
                dtxt += "<br/>"
            dtxt += "<br/><h3>call-graph</h3>"
            dtxt += "<img src= "+ curpath + "/TEST1.png></br>"
            dtxt += "<br/><h3>inheritance-graph</h3>"
            dtxt += "<img src= " + curpath + "/TEST2.png>"

        os.system("slither " + filepath)
        df = open("detector.log")
        dtxt += "<h2>vulnerability detected</h2><br/>"
        dtxt += "<p><font color='red'>"
        for line in df.readlines():
            dtxt += line
            dtxt += "<br/>"
        dtxt += "</font></p>"
        if args.argO is None:
            outfile = "out.pdf"
        else:
            outfile = args.argO
        pdfkit.from_string(dtxt, outfile)

        os.remove("detector.log")
        os.remove("printer.log")
        os.remove("TEST1.png")
        os.remove("TEST2.png")
        os.system("rm -rf " + filepath + ".*")
    else:
        print("please input -f parameter or use -h for help")


